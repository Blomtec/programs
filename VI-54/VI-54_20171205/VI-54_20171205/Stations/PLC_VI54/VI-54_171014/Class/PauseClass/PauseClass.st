//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "PauseClass"
	Revision           = "0.0"
	GUID               = "{9F380686-5491-40CB-9A59-B95357004E9A}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(780,480)">
	<Channels>
		<Server Name="Comm" GUID="{9A36A2E6-16C3-4677-80BA-A92D646408F1}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="In_ExternPauseDelay" GUID="{F17423E7-000E-4959-944C-65A97BF76403}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Server Name="In_ExternPauseOptions" GUID="{D9133AC3-6E9F-4BB5-A413-B02DA6E0D0CB}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Server Name="In_InternPauseDelay" GUID="{CDB3B4B3-E94A-4366-81FE-77642D7B019B}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Server Name="In_InternPauseOptions" GUID="{113A2CEC-3477-49D9-A2EA-90F89A062C6C}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Server Name="Out_PauseDelay" GUID="{BC360E6A-F1B0-4748-89F0-FA1B9EC0EA67}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Server Name="Out_PauseOptions" GUID="{530650DC-F398-439B-80B9-CCA038063CCC}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Client Name="In_Extern_Pause" Required="false" Internal="false"/>
		<Client Name="In_Intern_Pause" Required="false" Internal="false"/>
		<Client Name="Out_Pause" Required="false" Internal="false"/>
		<Client Name="Standard1" Required="true" Internal="true"/>
	</Channels>
	<Separators>
		<Servers>
			<SepChn Position="1"/>
			<SepChn Position="4"/>
			<SepChn Position="7"/>
		</Servers>
	</Separators>
	<Network Name="PauseClass">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name           = "Standard1"
				GUID           = "{FA9E99F8-1F0D-4C28-A7EE-2D137929DDB5}"
				Class          = "Standard"
				Position       = "(150,120)"
				Visualized     = "false"
				BackgroundTime = "1000 ms">
				<Channels>
					<Server Name="ClassSvr"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Standard1" Destination="Standard1.ClassSvr"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
PauseClass : CLASS
	TYPE
	  ePauseOptions :  //! <Type Public="true" Name="ePauseOptions"/>
	  (
	    eNormalyClosed,
	    eNormalyOpen,
	    ePuls
	  )$UDINT;
	END_TYPE
  //Servers:
	Comm 	: SvrChCmd_DINT;
	In_InternPauseOptions 	: SvrCh_ePauseOptions_PTofCls_PauseClass;
	In_InternPauseDelay 	: SvrCh_DINT;
	In_ExternPauseOptions 	: SvrCh_ePauseOptions_PTofCls_PauseClass;
	In_ExternPauseDelay 	: SvrCh_DINT;
	Out_PauseOptions 	: SvrCh_ePauseOptions_PTofCls_PauseClass;
	Out_PauseDelay 	: SvrCh_DINT;
  //Clients:
	In_Intern_Pause 	: CltCh_DINT;
	In_Extern_Pause 	: CltCh_DINT;
	Out_Pause 	: CltCh_DINT;
	Standard1 	: CltChCmd_Standard;
  //Variables:
		ExternPause 	: DINT;
		InternPause 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION GLOBAL PauseInternal
		VAR_INPUT
			PauseState 	: ePauseOptions;
			iPauseSignal 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL PauseExternal
		VAR_INPUT
			PauseState 	: ePauseOptions;
			iPauseSignal 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL GetPauseState
		VAR_OUTPUT
			State 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using Standard


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB PauseClass::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_PAUSECLASS
0$UINT, 0$UINT, (SIZEOF(::PauseClass))$UINT, 
7$UINT, 4$UINT, 0$UINT, 
TO_UDINT(522469407), "PauseClass", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::PauseClass.Comm.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(2660888151), "Comm", 
(::PauseClass.In_InternPauseOptions.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(684733736), "In_InternPauseOptions", 
(::PauseClass.In_InternPauseDelay.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(3690966826), "In_InternPauseDelay", 
(::PauseClass.In_ExternPauseOptions.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2219598423), "In_ExternPauseOptions", 
(::PauseClass.In_ExternPauseDelay.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(440743775), "In_ExternPauseDelay", 
(::PauseClass.Out_PauseOptions.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(3444743448), "Out_PauseOptions", 
(::PauseClass.Out_PauseDelay.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2776057694), "Out_PauseDelay", 
//Clients:
(::PauseClass.In_Intern_Pause.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3666810831), "In_Intern_Pause", 
(::PauseClass.In_Extern_Pause.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2579911878), "In_Extern_Pause", 
(::PauseClass.Out_Pause.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(910882076), "Out_Pause", 
(::PauseClass.Standard1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2411475140), "Standard1", TO_UDINT(3603188683), "Standard", 6$UINT, 1$UINT, 
END_FUNCTION


#define USER_CNT_PauseClass 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_PauseClass] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION PauseClass::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_PauseClass, pCmd := #vmt.CmdTable);
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	Comm.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Comm.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	In_InternPauseOptions.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF In_InternPauseOptions.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	In_InternPauseDelay.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF In_InternPauseDelay.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	In_ExternPauseOptions.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF In_ExternPauseOptions.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	In_ExternPauseDelay.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF In_ExternPauseDelay.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Out_PauseOptions.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Out_PauseOptions.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Out_PauseDelay.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Out_PauseDelay.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL PauseClass::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  // Read input
  // if IsClientConnected(#In_Intern_Pause) then
    In_Intern_Pause := In_Intern_Pause.Read();
    In_Extern_Pause := In_Extern_Pause.Read();
  // else
  //  In_Intern_Pause := 1;
  //end_if;
  
  
  // Write output
  if IsClientConnected(#Out_Pause) then
    Out_Pause.Write(input:= Out_Pause);
  end_if;
  
  
  // Open methodes
  PauseInternal(PauseState:= In_InternPauseOptions, iPauseSignal:= In_Intern_Pause);
  PauseExternal(PauseState:= In_ExternPauseOptions, iPauseSignal:= In_Extern_Pause);
  
  

	state := READY;

END_FUNCTION


FUNCTION GLOBAL PauseClass::PauseInternal
	VAR_INPUT
		PauseState 	: ePauseOptions;
		iPauseSignal 	: DINT;
	END_VAR

  case PauseState of
    eNormalyClosed:
      InternPause := (iPauseSignal = 1);
    eNormalyOpen:
      InternPause := (iPauseSignal = 0);
    ePuls:
      if Standard1.R_TRIG(CLK:= iPauseSignal) then
        InternPause := (InternPause xor 1);
      end_if;
  end_case;

END_FUNCTION

FUNCTION GLOBAL PauseClass::PauseExternal
	VAR_INPUT
		PauseState 	: ePauseOptions;
		iPauseSignal 	: DINT;
	END_VAR

  case PauseState of
    eNormalyClosed:
      ExternPause := (iPauseSignal = 1);
    eNormalyOpen:
      ExternPause := (iPauseSignal = 0);
    ePuls:
      if Standard1.R_TRIG(CLK:= iPauseSignal) then
        ExternPause := (ExternPause xor 1);
      end_if;
  end_case;

END_FUNCTION


FUNCTION GLOBAL PauseClass::GetPauseState
	VAR_OUTPUT
		State 	: DINT;
	END_VAR
  
  State := (InternPause = 1 | ExternPause = 1);

END_FUNCTION
