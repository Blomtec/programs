//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Banner_EZlight"
	Revision           = "0.0"
	GUID               = "{C59F38E3-92EF-4A22-B279-0D652661AED0}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(480,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{CBB0DD25-F0B8-4AB1-A51F-07F76CAE1AF7}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="oCollorBlue" Required="false" Internal="false"/>
		<Client Name="oCollorGreen" Required="false" Internal="false"/>
		<Client Name="oCollorRed" Required="false" Internal="false"/>
		<Client Name="oCollorWhite" Required="false" Internal="false"/>
		<Client Name="oCollorYellow" Required="false" Internal="false"/>
	</Channels>
</Class>
*)
Banner_EZlight : CLASS
	TYPE
	  eLightCollor :  //! <Type Public="true" Name="eLightCollor"/>
	  (
	    eGreenOn,
	    eGreenFlashing,
	    eRedOn,
	    eRedFlashing,
	    eYellowOn,
	    eYellowFlashing,
	    eBlueOn,
	    eBlueFlashing,
	    eWhiteOn,
	    eWhiteFlashing,
	    eGreenRedFlashCycle,
	    eGreenYellowFlashCycle,
	    eGreenBlueFlashCycle,
	    eGreenWhiteFlashCycle,
	    eRedYellowFlashCycle,
	    eRedBlueFlashCycle,
	    eRedWhiteFlashCylce,
	    eYellowBlueFlashCycle,
	    eYellowWhiteFlashCycle,
	    eBlueWhiteFlashCycle
	  )$UDINT;
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	oCollorGreen 	: CltCh_DINT;
	oCollorRed 	: CltCh_DINT;
	oCollorYellow 	: CltCh_DINT;
	oCollorBlue 	: CltCh_DINT;
	oCollorWhite 	: CltCh_DINT;
  //Variables:
		State 	: eLightCollor;
		Oldstate 	: eLightCollor;
		GreenCollor 	: DINT;
		RedCollor 	: DINT;
		YellowCollor 	: DINT;
		BlueCollor 	: DINT;
		WhiteCollor 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION GLOBAL LightCollors
		VAR_INPUT
			iCollor 	: eLightCollor;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Banner_EZlight::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_BANNER_EZLIGHT
0$UINT, 0$UINT, (SIZEOF(::Banner_EZlight))$UINT, 
1$UINT, 5$UINT, 0$UINT, 
TO_UDINT(90179801), "Banner_EZlight", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Banner_EZlight.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::Banner_EZlight.oCollorGreen.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1296342396), "oCollorGreen", 
(::Banner_EZlight.oCollorRed.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1216922212), "oCollorRed", 
(::Banner_EZlight.oCollorYellow.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(4264378221), "oCollorYellow", 
(::Banner_EZlight.oCollorBlue.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2452764689), "oCollorBlue", 
(::Banner_EZlight.oCollorWhite.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3742482169), "oCollorWhite", 
END_FUNCTION


#define USER_CNT_Banner_EZlight 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Banner_EZlight] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Banner_EZlight::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Banner_EZlight, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION VIRTUAL GLOBAL Banner_EZlight::Init

  // When starting up, give undefind value
  OldState$dint := -1;

END_FUNCTION

FUNCTION GLOBAL Banner_EZlight::LightCollors
	VAR_INPUT
		iCollor 	: eLightCollor;
	END_VAR
  
  // if state is different
  State := iCollor;
  if OldState <> State then
    Oldstate := State;
    
    // Set everything to zero
    GreenCollor   := 0;
    RedCollor     := 0;
    YellowCollor  := 0;
    BlueCollor    := 0;
    WhiteCollor   := 0;
  end_if;
  
  
  case State of
    eGreenOn:
      GreenCollor   := 1;
      
    eGreenFlashing:
      GreenCollor   := 1;
      RedCollor     := 1;
      
    eRedOn:
      RedCollor     := 1;
    
    eRedFlashing:
      RedCollor     := 1;
      YellowCollor  := 1;
      
    eYellowOn:
      YellowCollor  := 1;
      
    eYellowFlashing:
      YellowCollor  := 1;
      BlueCollor    := 1;
  
    eBlueOn:
      BlueCollor    := 1;
      
    eBlueFlashing:
      BlueCollor    := 1;
      WhiteCollor   := 1;
      
    eWhiteOn:
      WhiteCollor   := 1;
      
    eWhiteFlashing:
      WhiteCollor   := 1;
      GreenCollor   := 1;
      
    eGreenRedFlashCycle:
      GreenCollor   := 1;
      YellowCollor  := 1;
      
    eGreenYellowFlashCycle:
      GreenCollor   := 1;
      BlueCollor    := 1;
      
    eGreenBlueFlashCycle:
      RedCollor     := 1;
      BlueCollor    := 1;
    
    eGreenWhiteFlashCycle:
      RedCollor     := 1;
      WhiteCollor   := 1;
      
    eRedYellowFlashCycle:
      YellowCollor  := 1;
      WhiteCollor   := 1;
     
    eRedBlueFlashCycle:
      GreenCollor   := 1;
      RedCollor     := 1;
      WhiteCollor   := 1;
      
    eRedWhiteFlashCylce:
      GreenCollor   := 1;
      RedCollor     := 1;
      BlueCollor    := 1;
      
    eYellowBlueFlashCycle:
      GreenCollor   := 1;
      RedCollor     := 1;
      YellowCollor  := 1;
      
    eYellowWhiteFlashCycle:
      RedCollor     := 1;
      YellowCollor  := 1;
      WhiteCollor   := 1;
      
    eBlueWhiteFlashCycle:
      RedCollor     := 1;
      YellowCollor  := 1;
      WhiteCollor   := 1;
  end_case;
  
  
  // Set outputs
  oCollorGreen.Write(input:= GreenCollor);
  oCollorRed.Write(input:= RedCollor);
  oCollorYellow.Write(input:= YellowCollor);
  oCollorBlue.Write(input:= BlueCollor);
  oCollorWhite.Write(input:= WhiteCollor);
  

END_FUNCTION

