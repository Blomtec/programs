//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_DriveActValues"
	Revision           = "1.13"
	GUID               = "{75FC030F-FFAB-4A19-B766-30124547045B}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "100 ms"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\_DriveMngBase\Drive.ico"
	SharedCommandTable = "true"
	Objectsize         = "(570,1920)"
	Comment            = "displays the actual values of the connected Drive">
	<Channels>
		<Server Name="I_BCC" GUID="{AC4636F8-38D4-4929-972E-D009C59DA222}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 182&#13;&#10;Unit  : [-]&#13;&#10;Checksum of all parameters for data integrity check&#13;&#10;"/>
		<Server Name="I_BITS" GUID="{A5054585-CB56-45F3-A185-504B26F4EFB7}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 205&#13;&#10;Unit  : [-]&#13;&#10;BIT 0 ... PLL BIT0:&#13;&#10;BIT 1 ... PLL BIT1:&#13;&#10;00=PLL locked;&#13;&#10;01=PLL locked, more than half of the pll range is used (frequency to high);&#13;&#10;10=PLL locked, less than half of the pll range is used (frequency to low);&#13;&#10;11=PLL not locked&#13;&#10;BIT 2 ... Digital Input 6: LOCK &amp; ENABLE &amp; ENABLE_BRAKE&#13;&#10;BIT 3 ... IGBT Voltage (LOCK)&#13;&#10;BIT 4 ... ENABLE Input&#13;&#10;BIT 5 ... ENABLE_BRAKE Input&#13;&#10;BIT 6 ... Digital Input 1&#13;&#10;BIT 7 ... Digital Input 2&#13;&#10;BIT 8 ... Digital Input 3&#13;&#10;BIT 9 ... Digital Input 4&#13;&#10;BIT10 ... Digital Input 5"/>
		<Server Name="I_CAP" GUID="{3187A64C-0838-44D4-9569-886EC9F9FCEC}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 202&#13;&#10;Unit  : [-]&#13;&#10;Motorposition at the last edge of the capture input&#13;&#10;The selection of the input and the edge (rising/falling) is done by [A-CAPREF].&#13;&#10;&#13;&#10;If a capture happens, the corresponding bit in the statusword is toggled (statusword see [A-VALTT1] and [A-VALTT2]).&#13;&#10;"/>
		<Server Name="I_CAP4" GUID="{89A5CCFD-6487-4CB2-A106-DDCD2C7B1ED5}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 203&#13;&#10;Unit  : [-]&#13;&#10;Motorposition at the last edge of the common capture input 4&#13;&#10;&#13;&#10;If a capture happens, the corresponding bit in the statusword is toggled (statusword see [A-VALTT1] and [A-VALTT2])."/>
		<Server Name="I_CAPENC" GUID="{434BE260-F091-4C2F-8DD8-0564B1C8AB85}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 204&#13;&#10;Unit  : [-]&#13;&#10;Position of the second encoder at the last edge at the capture input&#13;&#10;The selection of the input and the edge (rising/falling) is done by A-CAPREF.&#13;&#10;&#13;&#10;If a capture happens, the corresponding bit in the statusword is toggled (statusword see A-VALTT1 and A-VALTT2)."/>
		<Server Name="I_DERROR" GUID="{9AE4A83C-DDE2-4AB6-A852-B90ECA7044E5}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 201&#13;&#10;Unit  : [-]&#13;&#10;Description : Internal Drive Errors&#13;&#13;&#10;&#13;&#13;&#10;MDD,SDD - Drives &#13;&#10;=============================================================================================&#13;&#10;Bit   0 SSI_ERROR (not supported by MDD 100)(additional Information to the Host Communication Error in [I-STATUS])&#13;&#10;Bit   1 HOST_ERROR (not supported by MDD 100)(additional Information to the Host Communication Error in [I-STATUS])&#13;&#10;Bit   2 SHORT_ERROR (short of the power stage)&#13;&#10;Bit   3 RAM_ERROR (error in the code ram area)&#13;&#10;Bit   4 FPGA_WATCHDOG_ERROR (not supported by MDD 100)(is set by the fpga watchdog mechanism)&#13;&#10;Bit   5 ADOFF_ERROR (not supported by MDD 100)(the offset of the motor current is to high)&#13;&#10;Bit   6 VCC18_ERROR (Phasing Direction Error, set when the motor turns in the wrong direction after commutation)&#13;&#10;Bit   7 VCCE_ERROR (Internal Encoder Error)&#13;&#10;Bit   8 ASMFU_IMAX_ERROR (is set if the asynchronous motor current is to high)&#13;&#10;Bit   9 PHASING_SIGNAL_STRENGTH_ERROR (Phasing Signal Strengh Error, more detailed information in Drive help parameter description I-DERROR)&#13;&#10;Bit  10 PHASING_POSITION_ERROR (is set when the position of the motor changes too drastically durin commutation)&#13;&#10;Bit  11 REGEN_ERROR (is set if the regen resistor can not be turned off)&#13;&#10;Bit  12 ENCODER_COUNTER_ERROR (not supported by MDD 100)(is set if the encoder counter check detects a fault)&#13;&#10;Bit  13 SIN_COS_COMMUT_ERROR (is set if a communication error exceeds 50ms)&#13;&#10;Bit  14 LVDS_ERROR (MDD only, is set if a communication error occurs between master and slave)&#13;&#10;Bit  15 PHASING_PHASE_SHIFT_ERROR (is set when the distance between the maximum positive/negative feedback peaks does not equal 180° +- 8°)&#13;&#10;Bit  16 PHASING_FOURIER_SIGNAL_ERROR (fourier signal cannot be calculated)&#13;&#10;&#13;&#10;DC06x&#13;&#10;=============================================================================================&#13;&#10;Bit   2 SHORT_ERROR (short of the power stage)&#13;&#10;Bit  13 FEEDBACK_ADC (feedback resolver values are not valid)(only DC061)&#13;&#10;Bit  15 SAFETY_ERROR  (safety error)&#13;&#10;Bit  16 SAFETY_WARNING (safety warning) &#13;&#10;Bit  21 Z_IMPULS_ERROR  (the z-impuls did not appeared within the time frame) (only DC062)&#13;&#10;Bit  23 FEEDBACK_SUPPLY (the feedback supply voltage fell below 15V)(only DC062)&#13;&#10;&#13;&#10;&#13;&#10;For more detailed informations, look at the parameter description of I-DERROR (201) in the Drive Help.&#13;&#13;&#10;These bits cause the Drive Error Ramp/Drive Error No Ramp in [I-STATUS]."/>
		<Server Name="I_FBB" GUID="{6DF7EEDA-2184-44E5-AF6A-5E445A4CE877}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 208&#13;&#10;Unit  : [-]&#13;&#10;Actual value Feedback bits&#13;&#10;&#13;&#10;Bit0: Toggle status bit for the cyclic monitoring of the error status for EnDat and Hiperface encoders. See A-FB.&#13;&#10;Bit1: Status bit for the K-FBRW 5 command (Read offset from encoder). If this command was executed, Bit1 = 1. &#13;&#10;Bit2..15: Reserve&#13;&#10;Bit16..31: In these 2 bytes, the internal encoder error codes are stored as long as the K-FBRW 4 command was executed or the cyclic error status monitor is active (A-FB).&#13;&#10;"/>
		<Server Name="I_FPOS" GUID="{DB0AB0C4-C025-4FA6-8BA3-DD24FD4AA1A4}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 177&#13;&#10;Unit  : [-]&#13;&#10;Description : Resolver angle&#13;&#10;&#13;&#10;"/>
		<Server Name="I_I2T" GUID="{476A4471-C4FF-47D7-B5F1-39C39A619C55}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 193&#13;&#10;Unit  : [%]&#13;&#10;Description : Actual value of I2T of the power stage in % of [C-ICONT]&#13;&#13;&#10;&#13;&#13;&#10;The i2t-mechanism of the drive limits the current and the continuous current is always limited to the value of [C-ICONT].&#13;&#10;"/>
		<Server Name="I_IA" GUID="{99BF9E62-B559-44A3-8885-15F84EA01885}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 178 &#13;&#10;Unit  : [-]&#13;&#10;AD-value Ia (only for test purpose)&#13;&#10;"/>
		<Server Name="I_IB" GUID="{E0CD7D5C-EF4F-4732-9B87-675E8EC30DCE}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 179&#13;&#10;Unit  : [-]&#13;&#10;AD-value Ib (only for test purpose)"/>
		<Server Name="I_ICMD" GUID="{8CB9C602-D7D8-43C2-964C-A7D477E9921A}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 194&#13;&#10;Unit  : [mA]&#13;&#10;Description : Current set point in Q - direction"/>
		<Server Name="I_ICONT" GUID="{15633C17-1941-4FA4-8D0A-47BFA1952B9A}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 186&#13;&#10;Unit  : [mA]&#13;&#10;Description : Drive continuos current&#13;&#10;"/>
		<Server Name="I_ID" GUID="{40309E63-2397-4FD8-B102-0789BFE4EBAF}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 192&#13;&#10;Unit  : [mA]&#13;&#10;Description : Actual value of the current in D - direction&#13;&#10;"/>
		<Server Name="I_INT1" GUID="{0CC88B11-0FD1-4EDE-8406-17C45BF5BCD0}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 206&#13;&#10;Unit  : [-]&#13;&#10;Internal Actual Value 1&#13;&#10;&#13;&#10;A-INT1 defines which internal actual value is displayed here.&#13;&#10;&#13;&#10;See also I-INT2."/>
		<Server Name="I_INT2" GUID="{822AE72B-9A1F-49A3-88B9-D7FD6AC4CAD6}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 207&#13;&#10;Unit  : [-]&#13;&#10;Internal Actual Value 2&#13;&#10;&#13;&#10;A-INT2 defines which internal actual value is displayed here.&#13;&#10;&#13;&#10;See also I-INT1."/>
		<Server Name="I_IPEAK" GUID="{EA7F953C-1F81-4D8A-BF40-DC0C3181640F}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 185&#13;&#10;Unit  : [mA]&#13;&#10;Description : Drive peak current&#13;&#10;"/>
		<Server Name="I_IQ" GUID="{9B0C7B25-541B-4CAF-9369-67F28EA4BA17}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 191&#13;&#10;Unit  : [mA]&#13;&#10;Description : Actual value of the current in Q - direction&#13;&#10;"/>
		<Server Name="I_MPOS" GUID="{C136C5B2-A5D1-4A00-97FC-4E2E5D0592CA}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 180&#13;&#10;Unit  : [-]&#13;&#10;Description : Actual multiturn position  in 1/8 of a revolution (available only with [M-TYPE] = 1)"/>
		<Server Name="I_N" GUID="{7399F1C8-BFA3-4089-BF73-7807D6874392}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 197&#13;&#10;Unit  : [rpm]&#13;&#10;Description : Actual speed unsmoothed&#13;&#10;"/>
		<Server Name="I_NCMD" GUID="{566E4797-F315-4CF7-AEB7-DD0E24C10CAD}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 190&#13;&#10;Unit  : [rpm]&#13;&#10;Description : Speed set point&#13;&#10;"/>
		<Server Name="I_NFILT" GUID="{28A560FC-A39E-4F2E-88A7-700E4D28FD59}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 198&#13;&#10;Unit  : [rpm]&#13;&#10;Description : Actual speed smoothed by [V-T]&#13;&#10;"/>
		<Server Name="I_PBAL" GUID="{395CB93C-1240-40C3-AB1D-2B9B3B27E1B8}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 196&#13;&#10;Unit  : [W]&#13;&#10;Description : Actual regen power&#13;&#13;&#10;This value is influenced by [G-RBAL].&#13;&#10;"/>
		<Server Name="I_PCMD" GUID="{2933DA25-28A4-4C36-9425-26CFB52A11F5}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 174&#13;&#10;Unit  : [-]&#13;&#10;Description : Position setpoint&#13;&#10;"/>
		<Server Name="I_PE" GUID="{54B6E748-F7CB-4D95-A029-3A66799F7AE0}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 175&#13;&#10;Unit  : [-]&#13;&#10;Description : Position error&#13;&#10;&#13;&#10;"/>
		<Server Name="I_POS" GUID="{E2740E25-1009-41B0-98B1-539EB63F19B6}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 176&#13;&#10;Unit  : [-]&#13;&#10;Description : Actual position (internal 64 bit position scaled by [P-PSCALE])&#13;&#10;&#13;&#10;"/>
		<Server Name="I_STATUS" GUID="{BE120683-A8E2-4B00-9B7F-0A067E01CAB7}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 199&#13;&#10;Unit  : [-]&#13;&#10;Description : Status register:&#13;&#13;&#10;&#13;&#13;&#10;Bit  0   Mains phase (1-phase supply)&#13;&#10;Bit  1   Mains fault&#13;&#10;Bit  2   Motor axis over-current&#13;&#10;Bit  3   Over voltage DC-Link&#13;&#10;Bit  4   Under voltage DC-link&#13;&#10;Bit  5   Motor axis phase failure&#13;&#10;Bit  6   Holding brake error&#13;&#10;Bit  7   Holding brake switch damaged&#13;&#10;Bit  8   reserved&#13;&#10;Bit  9   Motor thermostat&#13;&#10;Bit 10  Ambient temperature&#13;&#10;Bit 11  Heat sink temperature&#13;&#10;Bit 12  Feedback Error&#13;&#10;Bit 13  Commutation error&#13;&#10;Bit 14  Over speed&#13;&#10;Bit 15  Contouring Error&#13;&#10;Bit 16  Trajectory Error&#13;&#10;Bit 17  Host Communication Error&#13;&#10;Bit 18  Drive Error Ramp, for additional information see [I-DERROR]&#13;&#10;Bit 19  Drive Error No Ramp, for additional information see [I-DERROR]&#13;&#10;Bit 20  External Enable Locked Error&#13;&#10;Bit 21  IGBT Driver Voltage Error&#13;&#10;Bit 22  max. Regen Power Error&#13;&#10;Bit 23  24V Brake Supply Error&#13;&#10;Bit 24  reserved&#13;&#10;Bit 25  I2T-Error&#13;&#10;Bit 26  Motor Temperature Warning&#13;&#10;Bit 27  Motor Parameter Error&#13;&#10;Bit 28  Multi-Turn Position Error&#13;&#10;Bit 29  Max Sum Power Limitation&#13;&#10;Bit 30  Speed Controler in Saturation&#13;&#10;Bit 31  Fan Error &#13;&#10;&#13;&#13;&#10;The masks  [G-MASKE1], [G-MASKE2], [G-MASKW] and [G-MASKD] &#13;&#10;define if the corresponding bit of I-STATUS causes a cast of the motor, a ramp stop of the motor, a warning or nothing.&#13;&#13;&#10;This errors can be cleared with [K-CLRF].&#13;&#10;For more detailed informations, look at the parameter description of I-STATUS(199) in the Drive Help.&#13;&#10;"/>
		<Server Name="I_TEMPE" GUID="{7364CDFE-73BE-46F3-873C-CABABD265E0F}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 184&#13;&#10;Unit  : [°C]&#13;&#10;Description : Actual ambient temperature&#13;&#10;"/>
		<Server Name="I_TEMPK" GUID="{CFC52578-998D-471F-BB9B-B4F688FF838E}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 183&#13;&#10;Unit  : [°C]&#13;&#10;Description : Actual heat sink temperature&#13;&#10;&#13;&#10;"/>
		<Server Name="I_TEMPM" GUID="{007A842B-B0D0-4BE8-9796-04E391021B55}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 181&#13;&#10;Unit  : [Ohm]&#13;&#10;Description : Actual value of the PTC in the motor winding &#13;&#10;"/>
		<Server Name="I_VBUS" GUID="{A407D86B-361B-49D6-BFDA-59B14AFC88B6}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Para-Nr : 195&#13;&#10;Unit  : [V]&#13;&#10;Description : Actual DC-link voltage&#13;&#10;"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek" Author="HasHan"/>
		<Dokumentation Revision="1.13" Date="08.11.2016" Author="ZoePat" Company="Sigmatek" Description="Client &quot;DriveAxis&quot; is now not required."/>
		<Dokumentation Revision="1.12" Date="16.06.2015" Author="EisMic" Company="Sigmatek" Description="Updated description from I-STATUSand I-DERROR Bits."/>
		<Dokumentation Revision="1.11" Date="06.10.2014" Author="LanSte" Company="Sigmatek" Description="Added support for drive parameters P208 amd P122"/>
		<Dokumentation Revision="1.10" Date="04.12.2013" Author="ObeChr" Company="Sigmatek" Description="Added missing Bits in Type for Server I-STATUS + I-DERROR"/>
		<Dokumentation Revision="1.0" Date="05.08.2009" Author="HasHan" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
	<Network Name="_DriveActValues">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{18F5B318-632B-4833-9BD5-F5A12097EC14}"
				Class      = "_DriveParaBase"
				Position   = "(218,120)"
				Visualized = "false">
				<Channels>
					<Server Name="State"/>
					<Client Name="DriveAxis"/>
					<Client Name="ErrorCode"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.State" Destination="_base.State" Vertices="(740,210),(568,210),"/>
			<Connection Source="_base.DriveAxis" Destination="this.DriveAxis" Vertices="(218,210),(38,210),"/>
			<Connection Source="_base.ErrorCode" Destination="this.ErrorCode" Vertices="(218,270),(38,270),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using _DriveParaBase

_DriveActValues : CLASS
: _DriveParaBase
  //Servers:
	I_PCMD 	: SvrCh_DINT;
	I_PE 	: SvrCh_DINT;
	I_POS 	: SvrCh_DINT;
	I_FPOS 	: SvrCh_DINT;
	I_MPOS 	: SvrCh_DINT;
	I_TEMPM 	: SvrCh_DINT;
	I_TEMPK 	: SvrCh_DINT;
	I_TEMPE 	: SvrCh_DINT;
	I_IPEAK 	: SvrCh_DINT;
	I_ICONT 	: SvrCh_DINT;
	I_NCMD 	: SvrCh_DINT;
	I_IQ 	: SvrCh_DINT;
	I_ID 	: SvrCh_DINT;
	I_I2T 	: SvrCh_DINT;
	I_ICMD 	: SvrCh_DINT;
	I_VBUS 	: SvrCh_DINT;
	I_PBAL 	: SvrCh_DINT;
	I_N 	: SvrCh_DINT;
	I_NFILT 	: SvrCh_DINT;
	I_STATUS 	: SvrCh__SDDISTATE;
	I_DERROR 	: SvrCh__SDDIDERROR;
	I_BCC 	: SvrCh_DINT;
	I_IA 	: SvrCh_DINT;
	I_IB 	: SvrCh_DINT;
	I_CAP 	: SvrCh_DINT;
	I_CAP4 	: SvrCh_DINT;
	I_CAPENC 	: SvrCh_DINT;
	I_BITS 	: SvrCh_DINT;
	I_INT1 	: SvrCh_DINT;
	I_INT2 	: SvrCh_DINT;
	I_FBB 	: SvrCh_DINT;
  //Clients:
  //Variables:
		TimeMarkFast 	: UDINT;
		ActValSSW 	: DINT;
		bdActValActive : BDINT
		[
		  1 bI_PCMD,
		  2 bI_PE,
		  3 bI_POS,
		  4 bI_FPOS,
		  5 bI_MPOS,
		  6 bI_TEMPM,
		  7 bI_TEMPK,
		  8 bI_TEMPE,
		  9 bI_IPEAK,
		  10 bI_ICONT,
		  11 bI_NCMD,
		  12 bI_IQ,
		  13 bI_ID,
		  14 bI_I2T,
		  15 bI_ICMD,
		  16 bI_VBUS,
		  17 bI_PBAL,
		  18 bI_N,
		  19 bI_NFILT,
		  20 I_STATUS,
		  21 bI_I_DERROR,
		];

  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL RefreshPara
		VAR_INPUT
			usParaNr 	: USINT;
			dValue 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL ActValProc;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _DriveActValues::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__DRIVEACTVALUES
1$UINT, 13$UINT, (SIZEOF(::_DriveActValues))$UINT, 
31$UINT, 0$UINT, 0$UINT, 
TO_UDINT(3148856663), "_DriveActValues", //Class
TO_UDINT(3299882984), "_DriveParaBase", 1$UINT, 2$UINT, //Baseclass
//Servers:
(::_DriveActValues.I_PCMD.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2925603559), "I_PCMD", 
(::_DriveActValues.I_PE.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(481642861), "I_PE", 
(::_DriveActValues.I_POS.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3918573541), "I_POS", 
(::_DriveActValues.I_FPOS.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1956042952), "I_FPOS", 
(::_DriveActValues.I_MPOS.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2744606665), "I_MPOS", 
(::_DriveActValues.I_TEMPM.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(451602968), "I_TEMPM", 
(::_DriveActValues.I_TEMPK.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4085862189), "I_TEMPK", 
(::_DriveActValues.I_TEMPE.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(338780714), "I_TEMPE", 
(::_DriveActValues.I_IPEAK.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1374996763), "I_IPEAK", 
(::_DriveActValues.I_ICONT.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(341812614), "I_ICONT", 
(::_DriveActValues.I_NCMD.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(514263627), "I_NCMD", 
(::_DriveActValues.I_IQ.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2641310728), "I_IQ", 
(::_DriveActValues.I_ID.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4038250723), "I_ID", 
(::_DriveActValues.I_I2T.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4271023362), "I_I2T", 
(::_DriveActValues.I_ICMD.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2205168370), "I_ICMD", 
(::_DriveActValues.I_VBUS.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2332033682), "I_VBUS", 
(::_DriveActValues.I_PBAL.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(231573486), "I_PBAL", 
(::_DriveActValues.I_N.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(743260753), "I_N", 
(::_DriveActValues.I_NFILT.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2803537812), "I_NFILT", 
(::_DriveActValues.I_STATUS.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3159858376), "I_STATUS", 
(::_DriveActValues.I_DERROR.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2114936407), "I_DERROR", 
(::_DriveActValues.I_BCC.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1194362771), "I_BCC", 
(::_DriveActValues.I_IA.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2161648748), "I_IA", 
(::_DriveActValues.I_IB.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(433157590), "I_IB", 
(::_DriveActValues.I_CAP.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4034580216), "I_CAP", 
(::_DriveActValues.I_CAP4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1075846104), "I_CAP4", 
(::_DriveActValues.I_CAPENC.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1447142626), "I_CAPENC", 
(::_DriveActValues.I_BITS.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1093999866), "I_BITS", 
(::_DriveActValues.I_INT1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(818384138), "I_INT1", 
(::_DriveActValues.I_INT2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2848906416), "I_INT2", 
(::_DriveActValues.I_FBB.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(774188696), "I_FBB", 
//Clients:
END_FUNCTION


#define USER_CNT__DriveActValues 4

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__DriveActValues] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _DriveActValues::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= _DriveParaBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= _DriveParaBase::State.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, _DriveParaBase::State.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT__DriveActValues;
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #RefreshPara();

#pragma warning (default : 74)
	_DriveParaBase::State.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF _DriveParaBase::State.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION VIRTUAL GLOBAL _DriveActValues::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
	state:= READY;
  
  if (IsAxisConnected() = TRUE) & (DriveAxis.AxOkay() = true) & (DriveAxis.IsOnline() = true) then
    ActValProc();
    if DriveAxis <> READY then
      DriveAxis := READY;
    end_if;
  else
    this^.State  := ERROR;
    DriveAxis    := ERROR;
    ActValSSW    := SDD_I_PCMD;
    AnzASyncPara := 0;
  end_if;

END_FUNCTION


FUNCTION GLOBAL _DriveActValues::ActValProc
    
  if ops.tabsolute - TimeMarkFast >= ACTVALTIMEFAST then
    
    TimeMarkFast := ops.tabsolute;
    case ActValSSW of
    SDD_I_PCMD :
      SetASyncCmd(ParaNr:= SDD_I_PCMD, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_PE;
      
    SDD_I_PE :
      SetASyncCmd(ParaNr:= SDD_I_PE, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_POS;
      
    SDD_I_POS :
      SetASyncCmd(ParaNr:= SDD_I_POS, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_FPOS;
      
    SDD_I_FPOS :
      SetASyncCmd(ParaNr:= SDD_I_FPOS, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_MPOS;
      
    SDD_I_MPOS :
      SetASyncCmd(ParaNr:= SDD_I_MPOS, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_TEMPM;
      
    SDD_I_TEMPM :
      SetASyncCmd(ParaNr:= SDD_I_TEMPM, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_TEMPK;
    
    SDD_I_TEMPK :
      SetASyncCmd(ParaNr:= SDD_I_TEMPK, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_TEMPE;
      
    SDD_I_TEMPE :
      SetASyncCmd(ParaNr:= SDD_I_TEMPE, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_IPEAK;
      
    SDD_I_IPEAK :
      SetASyncCmd(ParaNr:= SDD_I_IPEAK, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_ICONT;
      
    SDD_I_ICONT :
      SetASyncCmd(ParaNr:= SDD_I_ICONT, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_NCMD;
      
    SDD_I_NCMD :
      SetASyncCmd(ParaNr:= SDD_I_NCMD, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_IQ;
      
    SDD_I_IQ :
      SetASyncCmd(ParaNr:= SDD_I_IQ, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_ID;
      
    SDD_I_ID :
      SetASyncCmd(ParaNr:= SDD_I_ID, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_I2T;
      
    SDD_I_I2T :
      SetASyncCmd(ParaNr:= SDD_I_I2T, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_ICMD;
      
    SDD_I_ICMD :
      SetASyncCmd(ParaNr:= SDD_I_ICMD, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_VBUS;
      
    SDD_I_VBUS :
      SetASyncCmd(ParaNr:= SDD_I_VBUS, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_PBAL;
      
    SDD_I_PBAL :
      SetASyncCmd(ParaNr:= SDD_I_PBAL, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_N;
      
    SDD_I_N :
      SetASyncCmd(ParaNr:= SDD_I_N, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_NFILT;
      
    SDD_I_NFILT :
      SetASyncCmd(ParaNr:= SDD_I_NFILT, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_STATUS;
    
    SDD_I_STATUS :
      SetASyncCmd(ParaNr:= SDD_I_STATUS, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_DERROR;
      
    SDD_I_DERROR :
      SetASyncCmd(ParaNr:= SDD_I_DERROR, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_CAP;
      
    SDD_I_CAP :
      SetASyncCmd(ParaNr:= SDD_I_CAP, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_CAP4;
      
    SDD_I_CAP4 :
      SetASyncCmd(ParaNr:= SDD_I_CAP4, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_CAPENC;
      
    SDD_I_CAPENC :
      SetASyncCmd(ParaNr:= SDD_I_CAPENC, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_BITS;
      
    SDD_I_BITS :
      SetASyncCmd(ParaNr:= SDD_I_BITS, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_INT1;
      
    SDD_I_INT1 :
      SetASyncCmd(ParaNr:= SDD_I_INT1, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_INT2;
      
    SDD_I_INT2 :
      SetASyncCmd(ParaNr:= SDD_I_INT2, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_IA;
     
    SDD_I_IA :
      SetASyncCmd(ParaNr:= SDD_I_IA, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_IB;  
      
    SDD_I_IB :
      SetASyncCmd(ParaNr:= SDD_I_IB, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_BCC; 
      
    SDD_I_BCC :
      SetASyncCmd(ParaNr:= SDD_I_BCC, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_FBB;  
      
    SDD_I_FBB :
      SetASyncCmd(ParaNr:= SDD_I_FBB, ParaRdWr:= 0, ParaValue:= 0, pThis:= this);
      ActValSSW := SDD_I_PCMD;  
      
    end_case;
  end_if;
  
END_FUNCTION


FUNCTION VIRTUAL GLOBAL _DriveActValues::RefreshPara
	VAR_INPUT
		usParaNr 	: USINT;
		dValue 	: DINT;
	END_VAR
  
  case usParaNr of
  
  SDD_I_PCMD :
    I_PCMD := dValue;
    
  SDD_I_PE :
    I_PE := dValue;
    
  SDD_I_POS :
    I_POS := dValue;
    
  SDD_I_FPOS :
    I_FPOS := dValue;
    
  SDD_I_MPOS :
    I_MPOS := dValue;
    
  SDD_I_TEMPM :
    I_TEMPM := dValue;
    
  SDD_I_TEMPK :
    I_TEMPK := dValue;
    
  SDD_I_TEMPE :
    I_TEMPE := dValue;
    
  SDD_I_IPEAK :
    I_IPEAK := dValue;
    
  SDD_I_ICONT :
    I_ICONT := dValue;
  
  SDD_I_NCMD :
    I_NCMD := dValue;
    
  SDD_I_IQ :
    I_IQ := dValue;
    
  SDD_I_ID :
    I_ID := dValue;
    
  SDD_I_I2T :
    I_I2T := dValue;
    
  SDD_I_ICMD :
    I_ICMD := dValue;
  
  SDD_I_VBUS :
    I_VBUS := dValue;
  
  SDD_I_PBAL :
    I_PBAL := dValue;
    
  SDD_I_N :
    I_N := dValue;
    
  SDD_I_NFILT :
    I_NFILT := dValue;
    
  SDD_I_STATUS :
    I_STATUS$DINT := dValue;
    
  SDD_I_DERROR :
    I_DERROR$DINT := dValue;
  
  SDD_I_CAP :
    I_CAP := dValue;
  
  SDD_I_CAP4 :
    I_CAP4 := dValue;
  
  SDD_I_CAPENC :
    I_CAPENC := dValue;
  
  SDD_I_BITS :
    I_BITS := dValue;
  
  SDD_I_INT1 :
    I_INT1 := dValue;
  
  SDD_I_INT2 :
    I_INT2 := dValue;
  
  SDD_I_IA :
    I_IA := dValue;
  
  SDD_I_IB :
    I_IB := dValue;
  
  SDD_I_BCC :
    I_BCC := dValue;
  
  SDD_I_FBB :
    I_FBB := dValue;
  
  end_case;
  
END_FUNCTION


FUNCTION VIRTUAL GLOBAL _DriveActValues::Init

  // call base method
  _DriveParaBase::Init();
  
  if _firstscan then
    ActValSSW := SDD_I_PCMD;
  end_if;

END_FUNCTION
