//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION
#include "..\..\Class\_16Alarms\Defines.h"

(*!
<Class
	Name               = "Sleegers_16AlarmsDrives"
	Revision           = "2.2"
	GUID               = "{4E3E80D3-3711-4AFA-AC3E-8D894F2DC86C}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	DefBackground      = "100 ms"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(600,180)">
	<Channels>
		<Server Name="AlarmActive" GUID="{706E858D-AE47-4372-8658-A75AEF314F2C}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="MachineName" GUID="{1775A87C-3B22-4EC5-9664-D59311842D6F}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="false"/>
		<Client Name="AlarmSleegers" Required="true" Internal="false"/>
		<Client Name="Group" Required="false" Internal="false"/>
		<Client Name="iAlarm01" Required="false" Internal="false"/>
		<Client Name="iAlarm02" Required="false" Internal="false"/>
		<Client Name="iAlarm03" Required="false" Internal="false"/>
		<Client Name="iAlarm04" Required="false" Internal="false"/>
		<Client Name="iAlarm05" Required="false" Internal="false"/>
		<Client Name="iAlarm06" Required="false" Internal="false"/>
		<Client Name="iAlarm07" Required="false" Internal="false"/>
		<Client Name="iAlarm08" Required="false" Internal="false"/>
		<Client Name="iAlarm09" Required="false" Internal="false"/>
		<Client Name="iAlarm10" Required="false" Internal="false"/>
		<Client Name="iAlarm11" Required="false" Internal="false"/>
		<Client Name="iAlarm12" Required="false" Internal="false"/>
		<Client Name="iAlarm13" Required="false" Internal="false"/>
		<Client Name="iAlarm14" Required="false" Internal="false"/>
		<Client Name="iAlarm15" Required="false" Internal="false"/>
		<Client Name="iAlarm16" Required="false" Internal="false"/>
		<Client Name="Reset" Required="false" Internal="false"/>
		<Client Name="Standard4" Required="true" Internal="true"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Class\_16Alarms\Defines.h" Include="true"/>
		</Files>
	</Dependencies>
	<Network Name="Sleegers_16AlarmsDrives">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name           = "Standard4"
				GUID           = "{D397D0DA-FA3C-445E-B666-04A8F8806290}"
				Class          = "Standard"
				Position       = "(270,450)"
				Visualized     = "false"
				BackgroundTime = "1000 ms">
				<Channels>
					<Server Name="ClassSvr"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Standard4" Destination="Standard4.ClassSvr"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
Sleegers_16AlarmsDrives : CLASS
  //Servers:
	AlarmActive 	: SvrChCmd_DINT;
	MachineName 	: SvrCh_UDINT;
  //Clients:
	AlarmSleegers 	: CltChCmd_AlarmSleegersParameter;
	Reset 	: CltCh_DINT;
	iAlarm01 	: CltChCmd_DriveAxleErr;
	iAlarm02 	: CltChCmd_DriveAxleErr;
	iAlarm03 	: CltChCmd_DriveAxleErr;
	iAlarm04 	: CltChCmd_DriveAxleErr;
	iAlarm05 	: CltChCmd_DriveAxleErr;
	iAlarm06 	: CltChCmd_DriveAxleErr;
	iAlarm07 	: CltChCmd_DriveAxleErr;
	iAlarm08 	: CltChCmd_DriveAxleErr;
	iAlarm09 	: CltChCmd_DriveAxleErr;
	iAlarm10 	: CltChCmd_DriveAxleErr;
	iAlarm11 	: CltChCmd_DriveAxleErr;
	iAlarm12 	: CltChCmd_DriveAxleErr;
	iAlarm13 	: CltChCmd_DriveAxleErr;
	iAlarm14 	: CltChCmd_DriveAxleErr;
	iAlarm15 	: CltChCmd_DriveAxleErr;
	iAlarm16 	: CltChCmd_DriveAxleErr;
	Group 	: CltCh_DINT;
	Standard4 	: CltChCmd_Standard;
  //Variables:
		AlarmData 	: AlarmArray;
		SetResetBit 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION GLOBAL SetAlarms;
	
	FUNCTION VIRTUAL GLOBAL AlarmActive::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL AlarmActive::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using Standard
#pragma usingLtd AlarmSleegersParameter
#pragma usingLtd DriveAxleErr


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Sleegers_16AlarmsDrives::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_SLEEGERS_16ALARMSDRIVES
2$UINT, 2$UINT, (SIZEOF(::Sleegers_16AlarmsDrives))$UINT, 
2$UINT, 20$UINT, 0$UINT, 
TO_UDINT(4177003289), "Sleegers_16AlarmsDrives", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Sleegers_16AlarmsDrives.AlarmActive.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(165019020), "AlarmActive", 
(::Sleegers_16AlarmsDrives.MachineName.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(660909857), "MachineName", 
//Clients:
(::Sleegers_16AlarmsDrives.AlarmSleegers.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1107638062), "AlarmSleegers", TO_UDINT(3150317674), "AlarmSleegersParameter", 0$UINT, 0$UINT, 
(::Sleegers_16AlarmsDrives.Reset.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2815000061), "Reset", 
(::Sleegers_16AlarmsDrives.iAlarm01.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(995831039), "iAlarm01", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm02.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(2723315013), "iAlarm02", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm03.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(3579137491), "iAlarm03", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm04.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1261557872), "iAlarm04", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm05.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1010231526), "iAlarm05", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm06.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(2772416860), "iAlarm06", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm07.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(3526920650), "iAlarm07", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm08.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1116181595), "iAlarm08", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm09.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(897623245), "iAlarm09", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm10.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1430727976), "iAlarm10", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm11.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(574627262), "iAlarm11", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm12.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(3142142980), "iAlarm12", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm13.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(3427695762), "iAlarm13", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm14.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1378543921), "iAlarm14", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm15.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(623761831), "iAlarm15", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.iAlarm16.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(3156510749), "iAlarm16", TO_UDINT(573136687), "DriveAxleErr", 6$UINT, 1$UINT, 
(::Sleegers_16AlarmsDrives.Group.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2593425013), "Group", 
(::Sleegers_16AlarmsDrives.Standard4.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(4292265035), "Standard4", TO_UDINT(3603188683), "Standard", 6$UINT, 1$UINT, 
END_FUNCTION


#define USER_CNT_Sleegers_16AlarmsDrives 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Sleegers_16AlarmsDrives] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Sleegers_16AlarmsDrives::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Sleegers_16AlarmsDrives, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	vmt.CmdTable.Write		:= #Write();
	vmt.CmdTable.Init		:= #Init();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	AlarmActive.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF AlarmActive.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	MachineName.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF MachineName.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION VIRTUAL GLOBAL Sleegers_16AlarmsDrives::Init

  // Set names to alarmclasses
  AlarmSleegers.MyInit(iStationNbr:= 0, iMachineNbr:= to_dint(MachineName * 100) + 16); // Look OUT!!!! + 16 else same numbers like first class
  
END_FUNCTION

FUNCTION VIRTUAL GLOBAL Sleegers_16AlarmsDrives::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  VAR
  	VarAlarmStr : AlarmArray;
  END_VAR


  // Set Array
  SetAlarms();
  AlarmSleegers.AlarmState(AlarmStr:= AlarmData);
  
  // Set VarAlarm to '0'
  _memset(dest:= #VarAlarmStr, usByte:= 0, cntr:= sizeof(AlarmArray));
  // Check of there is a Alarm active
  if _memcmp(ptr1:= #AlarmData, ptr2:= #VarAlarmStr, cntr:= sizeof(AlarmArray)) = 0 then
    AlarmActive := 0;
  else
    AlarmActive := 1;
    SetResetBit := 1; // Set resetBit when errors
  end_if;

	state := READY;

END_FUNCTION

FUNCTION VIRTUAL GLOBAL Sleegers_16AlarmsDrives::AlarmActive::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	output := AlarmActive;

END_FUNCTION

FUNCTION VIRTUAL GLOBAL Sleegers_16AlarmsDrives::AlarmActive::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	//AlarmActive := input;
  
  if input <> 0 then 
    // Reset values
    _memset(dest:= #AlarmData, usByte:= 0, cntr:= sizeof(AlarmArray));
    SetResetBit := 0;
  end_if;
 	result := input;

END_FUNCTION

FUNCTION GLOBAL Sleegers_16AlarmsDrives::SetAlarms

  // Reset 
  // AlarmData[0].AlarmActive := SetResetBit$Bool;
  
  // Alarm 1
  if IsClientConnected(#iAlarm01) then
    AlarmData[1].AlarmActive := (iAlarm01.DrivesOk = 0);
    AlarmData[1].AlarmNbr := iAlarm01.I_StatusNbr;
  else
    AlarmData[1].AlarmActive := 0;
  end_if; 
  // Alarm 2
  if IsClientConnected(#iAlarm02) then
    AlarmData[2].AlarmActive := (iAlarm02.DrivesOk = 0);
    AlarmData[2].AlarmNbr := iAlarm02.I_StatusNbr;
  else
    AlarmData[2].AlarmActive := 0;
  end_if;  
  // Alarm 3
  if IsClientConnected(#iAlarm03) then
    AlarmData[3].AlarmActive := (iAlarm03.DrivesOk = 0);
    AlarmData[3].AlarmNbr := iAlarm03.I_StatusNbr;
  else
    AlarmData[3].AlarmActive := 0;
  end_if;  
  // Alarm 4
  if IsClientConnected(#iAlarm04) then
    AlarmData[4].AlarmActive := (iAlarm04.DrivesOk = 0);
    AlarmData[4].AlarmNbr := iAlarm04.I_StatusNbr;
  else
    AlarmData[4].AlarmActive := 0;
  end_if;
  // Alarm 5
  if IsClientConnected(#iAlarm05) then
    AlarmData[5].AlarmActive := (iAlarm05.DrivesOk = 0);
    AlarmData[5].AlarmNbr := iAlarm05.I_StatusNbr;
  else
    AlarmData[5].AlarmActive := 0;
  end_if;  
  // Alarm 6
  if IsClientConnected(#iAlarm06) then
    AlarmData[6].AlarmActive := (iAlarm06.DrivesOk = 0);
    AlarmData[6].AlarmNbr := iAlarm06.I_StatusNbr;
  else
    AlarmData[6].AlarmActive := 0;
  end_if;  
  // Alarm 7
  if IsClientConnected(#iAlarm07) then
    AlarmData[7].AlarmActive := (iAlarm07.DrivesOk = 0);
    AlarmData[7].AlarmNbr := iAlarm07.I_StatusNbr;
  else
    AlarmData[7].AlarmActive := 0;
  end_if;  
  // Alarm 8
  if IsClientConnected(#iAlarm08) then
    AlarmData[8].AlarmActive := (iAlarm08.DrivesOk = 0);
    AlarmData[8].AlarmNbr := iAlarm08.I_StatusNbr;
  else
    AlarmData[8].AlarmActive := 0;
  end_if;  
  // Alarm 9
  if IsClientConnected(#iAlarm09) then
    AlarmData[9].AlarmActive := (iAlarm09.DrivesOk = 0);
    AlarmData[9].AlarmNbr := iAlarm09.I_StatusNbr;
  else
    AlarmData[9].AlarmActive := 0;
  end_if;  
  // Alarm 10
  if IsClientConnected(#iAlarm10) then
    AlarmData[10].AlarmActive := (iAlarm10.DrivesOk = 0);
    AlarmData[10].AlarmNbr := iAlarm10.I_StatusNbr;
  else
    AlarmData[10].AlarmActive := 0;
  end_if;  
  // Alarm 11
  if IsClientConnected(#iAlarm11) then
    AlarmData[11].AlarmActive := (iAlarm11.DrivesOk = 0);
    AlarmData[11].AlarmNbr := iAlarm11.I_StatusNbr;
  else
    AlarmData[11].AlarmActive := 0;
  end_if;  
  // Alarm 12
  if IsClientConnected(#iAlarm12) then
    AlarmData[12].AlarmActive := (iAlarm12.DrivesOk = 0);
    AlarmData[12].AlarmNbr := iAlarm12.I_StatusNbr;
  else
    AlarmData[12].AlarmActive := 0;
  end_if;  
  // Alarm 13
  if IsClientConnected(#iAlarm13) then
    AlarmData[13].AlarmActive := (iAlarm13.DrivesOk = 0);
    AlarmData[13].AlarmNbr := iAlarm13.I_StatusNbr;
  else
    AlarmData[13].AlarmActive := 0;
  end_if;  
  // Alarm 14
  if IsClientConnected(#iAlarm14) then
    AlarmData[14].AlarmActive := (iAlarm14.DrivesOk = 0);
    AlarmData[14].AlarmNbr := iAlarm14.I_StatusNbr;
  else
    AlarmData[14].AlarmActive := 0;
  end_if; 
  // Alarm 15
  if IsClientConnected(#iAlarm15) then
    AlarmData[15].AlarmActive := (iAlarm15.DrivesOk = 0);
    AlarmData[15].AlarmNbr := iAlarm15.I_StatusNbr;
  else
    AlarmData[15].AlarmActive := 0;
  end_if;   

END_FUNCTION
