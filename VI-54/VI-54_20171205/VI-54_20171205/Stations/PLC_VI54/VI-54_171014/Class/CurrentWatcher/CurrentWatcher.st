//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "CurrentWatcher"
	Revision           = "0.0"
	GUID               = "{6BC48199-AF14-4DC3-9018-997E75C91BC3}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(600,480)">
	<Channels>
		<Server Name="ActCurrent" GUID="{FA366D28-18B4-4BCB-8B7D-54AFDCA1F05C}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="CheckCurrent" GUID="{86D32573-C7DC-42C5-B718-98C9A83C53BA}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Server Name="ClassSvr" GUID="{5C057A42-5EFA-47B4-8F67-B8E95F7F98CA}" Visualized="true" Remotely="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="MaxCurrent" GUID="{EBA6349F-BA7D-40CC-93F3-C347696DDA78}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ResetErrors" GUID="{706401C1-36C8-45CC-81BD-C53FA5111AF1}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="StallCurrent" GUID="{F40DC3E2-1460-45B4-8CE3-73D81F165924}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="TypeOfCheck" GUID="{187C5535-849E-46A9-A165-E17243C289F8}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Client Name="_DriveASyncPara1" Required="true" Internal="true"/>
		<Client Name="CurrentToHigh" Required="true" Internal="true"/>
		<Client Name="DriveAxis" Required="true" Internal="false" Comment="object channel to the class _DriveAxis"/>
		<Client Name="LmcAxic" Required="true" Internal="false"/>
	</Channels>
	<Network Name="CurrentWatcher">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_DriveASyncPara1"
				GUID       = "{BBEC5286-FDED-4C42-AA89-55B9AB2E02FE}"
				Class      = "_DriveASyncPara"
				Position   = "(270,180)"
				Visualized = "true">
				<Channels>
					<Server Name="ErrorQuit"/>
					<Server Name="ParaNr"/>
					<Server Name="ParaRdWr"/>
					<Server Name="ParaValue"/>
					<Server Name="State"/>
					<Client Name="DriveAxis"/>
					<Client Name="ErrorCode"/>
				</Channels>
			</Object>
			<Object
				Name       = "CurrentToHigh"
				GUID       = "{9E459B81-B5D3-49EB-A60E-9542FD9972D6}"
				Class      = "_AlarmX0Para"
				Position   = "(270,570)"
				Visualized = "true">
				<Channels>
					<Server Name="ClassSvr"/>
					<Client Name="Acknow"/>
					<Client Name="Config" Value="0"/>
					<Client Name="Group"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this._DriveASyncPara1" Destination="_DriveASyncPara1.State"/>
			<Connection Source="_DriveASyncPara1.DriveAxis" Destination="this.DriveAxis" Vertices="(270,270),(38,270),"/>
			<Connection Source="this.CurrentToHigh" Destination="CurrentToHigh.ClassSvr"/>
			<Connection Source="this.ClassSvr" Destination="CurrentToHigh.ClassSvr" Vertices="(788,570),(570,660),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
CurrentWatcher : CLASS
	TYPE
#pragma pack(push, 1)
	  CurrentTypes : STRUCT
	    StallCurrent : DINT;
	    MaxCurrent : DINT;
	    ActCurrent : DINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
  //Servers:
	CheckCurrent 	: SvrChCmd_DINT;
	TypeOfCheck 	: SvrCh_SoortCheck;
	StallCurrent 	: SvrCh_DINT;
	MaxCurrent 	: SvrCh_DINT;
	ActCurrent 	: SvrCh_DINT;
	ResetErrors 	: SvrCh_DINT;
	ClassSvr 	: SvrCh_DINT;
  //Clients:
	LmcAxic 	: CltChCmd__LMCAxis;
	DriveAxis 	: CltChCmd__DriveAxisBase;
	_DriveASyncPara1 	: CltChCmd__DriveASyncPara;
	CurrentToHigh 	: CltChCmd__AlarmX0Para;
  //Variables:
		CurrentValues 	: CurrentTypes;
		CurrentToHighTmr 	: UDINT;
		TmrOlineAlignment 	: UDINT;
		ReadCurrent 	: DINT;
		LmcAxisState 	: _LMCAXIS_STATUS;
		ResetEenmaal 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION GLOBAL ResetError;
	
	FUNCTION GLOBAL ReadCurrents;
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using _AlarmX0Para
#pragma using _DriveASyncPara
#pragma usingLtd _DriveAxisBase
#pragma usingLtd _LMCAxis


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB CurrentWatcher::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CURRENTWATCHER
0$UINT, 0$UINT, (SIZEOF(::CurrentWatcher))$UINT, 
7$UINT, 4$UINT, 0$UINT, 
TO_UDINT(2807931260), "CurrentWatcher", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::CurrentWatcher.CheckCurrent.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000011000$UINT, TO_UDINT(3305268023), "CheckCurrent", 
(::CurrentWatcher.TypeOfCheck.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2473871976), "TypeOfCheck", 
(::CurrentWatcher.StallCurrent.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2975972981), "StallCurrent", 
(::CurrentWatcher.MaxCurrent.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3107851838), "MaxCurrent", 
(::CurrentWatcher.ActCurrent.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3663451001), "ActCurrent", 
(::CurrentWatcher.ResetErrors.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3012907083), "ResetErrors", 
(::CurrentWatcher.ClassSvr.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::CurrentWatcher.LmcAxic.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1027301230), "LmcAxic", TO_UDINT(1422175863), "_LMCAxis", 1$UINT, 73$UINT, 
(::CurrentWatcher.DriveAxis.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000110$UINT, TO_UDINT(2080180789), "DriveAxis", TO_UDINT(4124502522), "_DriveAxisBase", 1$UINT, 72$UINT, 
(::CurrentWatcher._DriveASyncPara1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1134747442), "_DriveASyncPara1", TO_UDINT(3294374015), "_DriveASyncPara", 1$UINT, 2$UINT, 
(::CurrentWatcher.CurrentToHigh.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3795365084), "CurrentToHigh", TO_UDINT(800276940), "_AlarmX0Para", 0$UINT, 9$UINT, 
END_FUNCTION


#define USER_CNT_CurrentWatcher 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_CurrentWatcher] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION CurrentWatcher::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_CurrentWatcher, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #M_WR_DIRECT();
	vmt.CmdTable.CyWork		:= #CyWork();
	CheckCurrent.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF CheckCurrent.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	TypeOfCheck.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF TypeOfCheck.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ResetErrors.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF ResetErrors.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ClassSvr.pMeth			:= StoreMethod( #ClassSvr::Read(), #ClassSvr::Write() );
	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL CurrentWatcher::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  // controleerd of de homesensor niet kapot is
  // Dus de stroom mag niet te hoog oplopen!
  
  // Lees statussen uit
  ReadCurrents();
  LmcAxic       := LmcAxic.Read();
  LmcAxisState  := LmcAxic.ReadAxisStatus();
  MaxCurrent    := CurrentValues.MaxCurrent;
  StallCurrent  := CurrentValues.StallCurrent;
  ActCurrent    := CurrentValues.ActCurrent;
  
  // kijk of ingevulde stroom groter is dan '100' mA, anders neem max stroom / 4
  if CheckCurrent <= 100 & CurrentValues.MaxCurrent > 0 then
    CheckCurrent := (CurrentValues.MaxCurrent / 4); // rond de 1 Amp gezekerd wanneer er niks wordt ingevuld
  end_if;

  // Verschillende types die gechecked kunnen worden
  if TypeOfCheck = HomeCheck then
    if LmcAxisState.IsReferenced = 0 then // Alleen checken bij homen
      if CurrentValues.ActCurrent > CheckCurrent then
        if (ops.tAbsolute - CurrentToHighTmr) >= 5 * _10ms then
          LmcAxic.PowerOff(Mode:=LMCAXIS_IMMEDIATE_STOPP);
          CurrentToHigh.ClassSvr.Write(input:= 1);
        end_if;
      else
        CurrentToHighTmr := ops.tAbsolute;
      end_if;
    end_if;
  elsif TypeOfCheck = MoveCheck then
    if LmcAxic = MOVE_LMCAXIS then // Alleen checken bij moving
      if CurrentValues.ActCurrent > CheckCurrent then
        if (ops.tAbsolute - CurrentToHighTmr) >= 5 * _10ms then
          LmcAxic.PowerOff(Mode:=LMCAXIS_IMMEDIATE_STOPP);
          CurrentToHigh.ClassSvr.Write(input:= 1);
        end_if;
      else
        CurrentToHighTmr := ops.tAbsolute;
      end_if;
    end_if;
  end_if;
  
  // Resetten
  if ResetErrors = 1 then
    if ResetEenmaal = 0 then
      ResetError();
      ResetEenmaal := 1;
    end_if;
  else
    ResetEenmaal := 0;
  end_if; 


	state := READY;

END_FUNCTION

FUNCTION GLOBAL CurrentWatcher::ResetError

  // Reset home error
  CurrentToHigh.ClassSvr.Write(input:= 0);

END_FUNCTION

FUNCTION GLOBAL CurrentWatcher::ReadCurrents

  // Lees stromen uit
  if DriveAxis.IsOnline() = 1 then
    if ops.tAbsolute - TmrOlineAlignment >= 1000 then
      if CurrentValues.StallCurrent = 0 then
        _DriveASyncPara1.ParaRdWr.Write(0);
        _DriveASyncPara1.ParaNr.Write(56);  // Stall current of the motor (rms).
        if ops.tAbsolute - TmrOlineAlignment >= 1100 then
          CurrentValues.StallCurrent := _DriveASyncPara1.ParaValue.Read();
          TmrOlineAlignment := ops.tAbsolute;
        end_if;  
      elsif CurrentValues.MaxCurrent = 0 then
        _DriveASyncPara1.ParaRdWr.Write(0);
        _DriveASyncPara1.ParaNr.Write(57);  // Maximum current of the motor (rms).
        if ops.tAbsolute - TmrOlineAlignment >= 1100 then
          CurrentValues.MaxCurrent := _DriveASyncPara1.ParaValue.Read();
          TmrOlineAlignment := ops.tAbsolute;
        end_if;
      else
        _DriveASyncPara1.ParaRdWr.Write(0);
        _DriveASyncPara1.ParaNr.Write(191);  // Actual current of the motor.
        CurrentValues.ActCurrent := ABS(_DriveASyncPara1.ParaValue.Read());
      end_if;
    end_if;
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL CurrentWatcher::ClassSvr::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	ClassSvr := CurrentToHigh.ClassSvr.Read();
	output := ClassSvr;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL CurrentWatcher::ClassSvr::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	ClassSvr := input;
	result := (CurrentToHigh.ClassSvr.Write(ClassSvr))$DINT;

END_FUNCTION
