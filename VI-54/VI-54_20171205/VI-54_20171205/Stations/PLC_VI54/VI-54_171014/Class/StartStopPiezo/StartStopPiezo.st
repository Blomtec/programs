//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "StartStopPiezo"
	Revision           = "3.0"
	GUID               = "{5DD2C220-BC70-4587-BF72-1F70860A94CD}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(480,300)">
	<Channels>
		<Server Name="Gestart" GUID="{8061AE98-2112-4653-B685-F6E331822F50}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="PiezoBediening" GUID="{8241FA60-D2D1-4C07-AB92-E9697335895A}" Visualized="true" Initialize="true" DefValue="1" WriteProtected="false" Retentive="File"/>
		<Server Name="StartNo" GUID="{AF6CD663-E0D9-4EF7-9D17-54EBFE4E2F7A}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="StopNc" GUID="{EB5E153A-9FD8-4653-8E8A-8344F6C1B433}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="iStartNo" Required="true" Internal="false"/>
		<Client Name="iStopNo" Required="true" Internal="false"/>
		<Client Name="LedGreen" Required="true" Internal="true"/>
		<Client Name="LedRed" Required="true" Internal="true"/>
		<Client Name="Merker1" Required="true" Internal="true"/>
		<Client Name="oLEDgreen" Required="false" Internal="false"/>
		<Client Name="oLEDred" Required="false" Internal="false"/>
		<Client Name="Standaard" Required="true" Internal="true"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Class\StartStopPiezo\VOV.vov"/>
		</Files>
	</Dependencies>
	<Network Name="StartStopPiezo">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "LedGreen"
				GUID       = "{1A15CEE2-8DC0-4842-8C35-F0F927B15465}"
				Class      = "Merker"
				Position   = "(240,570)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
				</Channels>
			</Object>
			<Object
				Name       = "LedRed"
				GUID       = "{524D3A77-814D-42C6-992A-3810BFB12134}"
				Class      = "Merker"
				Position   = "(240,690)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
				</Channels>
			</Object>
			<Object
				Name       = "Merker1"
				GUID       = "{8276C955-384E-433C-B34D-A48B0BD89430}"
				Class      = "Merker"
				Position   = "(240,450)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
				</Channels>
			</Object>
			<Object
				Name           = "Standaard"
				GUID           = "{59C7A0BA-1525-4280-B7BF-3B52DE5AD5FE}"
				Class          = "Standard"
				Position       = "(240,270)"
				Visualized     = "false"
				BackgroundTime = "1000 ms">
				<Channels>
					<Server Name="ClassSvr"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Standaard" Destination="Standaard.ClassSvr"/>
			<Connection Source="this.Merker1" Destination="Merker1.Data"/>
			<Connection Source="this.LedGreen" Destination="LedGreen.Data"/>
			<Connection Source="this.LedRed" Destination="LedRed.Data"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
StartStopPiezo : CLASS
  //Servers:
	StartNo 	: SvrChCmd_DINT;
	StopNc 	: SvrCh_DINT;
	PiezoBediening 	: SvrCh_OptiesEnum;
	Gestart 	: SvrCh_DINT;
  //Clients:
	iStartNo 	: CltCh_DINT;
	iStopNo 	: CltCh_DINT;
	Standaard 	: CltChCmd_Standard;
	oLEDgreen 	: CltCh_DINT;
	oLEDred 	: CltCh_DINT;
	Merker1 	: CltChCmd_Merker;
	LedGreen 	: CltChCmd_Merker;
	LedRed 	: CltChCmd_Merker;
  //Variables:
		StartStatus 	: DINT;
		Signals 	: ImpClkStr;
		hStart 	: DINT;
		TmrStart 	: UDINT;
		TmrStop 	: UDINT;
		StopIntern 	: DINT;
		StartIntern 	: DINT;
  //Functions:
	
	FUNCTION GLOBAL StatusGestart
		VAR_INPUT
			State 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL StartNo::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL StartNo::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL StopNc::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using Merker
#pragma using Standard


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB StartStopPiezo::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_STARTSTOPPIEZO
3$UINT, 0$UINT, (SIZEOF(::StartStopPiezo))$UINT, 
4$UINT, 8$UINT, 0$UINT, 
TO_UDINT(1377730638), "StartStopPiezo", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::StartStopPiezo.StartNo.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(4294273155), "StartNo", 
(::StartStopPiezo.StopNc.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3635390091), "StopNc", 
(::StartStopPiezo.PiezoBediening.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2316510578), "PiezoBediening", 
(::StartStopPiezo.Gestart.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3982126964), "Gestart", 
//Clients:
(::StartStopPiezo.iStartNo.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(829010258), "iStartNo", 
(::StartStopPiezo.iStopNo.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(740598999), "iStopNo", 
(::StartStopPiezo.Standaard.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2905283977), "Standaard", TO_UDINT(3603188683), "Standard", 6$UINT, 1$UINT, 
(::StartStopPiezo.oLEDgreen.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(4194748146), "oLEDgreen", 
(::StartStopPiezo.oLEDred.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1079495869), "oLEDred", 
(::StartStopPiezo.Merker1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1189176136), "Merker1", TO_UDINT(2276934072), "Merker", 1$UINT, 0$UINT, 
(::StartStopPiezo.LedGreen.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2013708771), "LedGreen", TO_UDINT(2276934072), "Merker", 1$UINT, 0$UINT, 
(::StartStopPiezo.LedRed.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3736778736), "LedRed", TO_UDINT(2276934072), "Merker", 1$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_StartStopPiezo 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_StartStopPiezo] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION StartStopPiezo::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_StartStopPiezo, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	vmt.CmdTable.Write		:= #Write();
	StartNo.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF StartNo.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	StopNc.pMeth			:= StoreMethod( #StopNc::Read(), #M_NO_F() );
	IF StopNc.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	PiezoBediening.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF PiezoBediening.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL StartStopPiezo::StartNo::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

  iStartNo := iStartNo.Read();
  hStart := iStartNo = 1;
  StartIntern := (Merker1.Data.Read() = 1);
  
  if hStart = 1 | StartIntern = 1 then
    StartNo := 1;
    TmrStart := ops.tAbsolute;
  else
    if ops.tAbsolute - TmrStart > 500 then
      StartNo := 0;
    end_if;
  end_if;  
  output := StartNo;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL StartStopPiezo::StopNc::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

  iStopNo := iStopNo.Read();
  StopIntern := (Merker1.Data.Read() = 2);
  
  if PiezoBediening = Actief then
    if iStopNo = 1 | StopIntern = 1 then
      StopNc := (iStopNo = 0) & (StopIntern = 0);
      TmrStop := ops.tAbsolute;
    elsif ops.tAbsolute - TmrStop >= 400 then
      StopNc := (iStopNo = 0) & (StopIntern = 0);
    end_if;  
  else
	  StopNc := (iStopNo = 1) | (StopIntern = 1);
  end_if;
  output := StopNc;
  
END_FUNCTION


FUNCTION GLOBAL StartStopPiezo::StatusGestart
	VAR_INPUT
		State 	: DINT;
	END_VAR

  Gestart := State;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL StartStopPiezo::StartNo::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	StartStatus := input;
  Standaard.Imp_Clk(pTimeData:= #Signals);
  
  if PiezoBediening = Actief then
    if StartStatus = -1 then // fault
      oLEDred   := Signals._Clk500mSec;
      oLEDgreen := 0;
    elsif StartStatus = -2 then
      oLEDred   := Signals._Clk500mSec;
      oLEDgreen := Signals._Clk500mSec = 0;
    elsif StartStatus = -3 then // ExternRease 
      oLEDred   := 0;
      oLEDgreen := Signals._Clk500mSec = 0;  
    elsif StartStatus = -4 then // lockstate
      oLEDred   := Signals._Clk100mSec = 1;
      oLEDgreen := Signals._Clk100mSec = 1;  
    elsif StartStatus = -5 then // to start position !!
      oLEDred   := Signals._Clk100mSec = 1;
      oLEDgreen := Signals._Clk500mSec = 1;  
    elsif StartStatus = -6 then // Press 1x stop, Wait for cyclus
      oLEDred   := Signals._Clk100mSec = 1;
      oLEDgreen := 1;
    elsif StartStatus = 0 then // stop 
      oLEDred   := 1;
      oLEDgreen := 0;
    elsif StartStatus = 1 then
      oLEDred   := 0;
      oLEDgreen := 1;
    elsif StartStatus = 2 then
      oLEDred   := 0;
      oLEDgreen := Signals._Clk100mSec;
    else
      oLEDred   := 0;
      oLEDgreen := 0;
    end_if;
  else
    oLEDred   := 0;
    oLEDgreen := 0;
  end_if;
  
  
  if IsClientConnected(#oLEDgreen) then
    oLEDgreen.Write (oLEDgreen);
    LedGreen.Data.Write(input:= oLEDgreen);
  end_if;
  
  if IsClientConnected(#oLEDred) then
    oLEDred.Write (oLEDred);
    LedRed.Data.Write(input:= oLEDred);
  end_if;
  
 	result := StartNo;

END_FUNCTION
