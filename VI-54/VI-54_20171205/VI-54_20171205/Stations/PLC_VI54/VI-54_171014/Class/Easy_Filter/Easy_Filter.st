//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Easy_Filter"
	Revision           = "1.0"
	GUID               = "{9CAE18D7-B15E-4D02-8DE0-E74ED5D3763D}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\Easy_Filter\measure3.ico"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "V1.0 Easy Filtering Class&#13;&#10;Filter is averaging the inputvalue">
	<Channels>
		<Server Name="output" GUID="{9A1AF29D-2AC3-41B4-8388-FAC79F447F76}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="=&gt; Read to get the filtered Value [units]"/>
		<Client Name="averages" Required="false" Internal="false" Comment="[0..20] resolution of average "/>
		<Client Name="input" Required="false" Internal="false" Comment="not filtered value [units]"/>
	</Channels>
</Class>
*)
Easy_Filter : CLASS
  //Servers:
	output 	: SvrChCmd_DINT;
  //Clients:
	input 	: CltCh_DINT;
	averages 	: CltCh_UDINT;
  //Variables:
		filter_values : ARRAY [0..20] OF DINT;

		index_F 	: USINT;
		first_full 	: BOOL;
		Sum 	: DINT;
  //Functions:
				//! <Function Comment="****************************************************************&#13;&#10;   Einfaches digitales Filter&#13;&#10;   Filter berechnet den Mittelwert der Eingabewerte.&#13;&#10;****************************************************************&#13;&#10;     erstellt  :   BS  :   KW46/2001&#13;&#10;****************************************************************&#13;&#10;****************************************************************&#13;&#10;   Easy Digital Filter&#13;&#10;   Filter is only averaging the inputvalue&#13;&#10;****************************************************************&#13;&#10;     Created   :   BS  :   KW46/2001&#13;&#10;****************************************************************&#13;&#10;" Name="Init"/>
	FUNCTION VIRTUAL GLOBAL Init;
				//! <Function Comment="****************************************************************&#13;&#10;   Easy Digital Filter&#13;&#10;   Filter is only averaging the inputvalue&#13;&#10;****************************************************************&#13;&#10;     Created   :   BS  :   KW46/2001&#13;&#10;****************************************************************&#13;&#10;****************************************************************&#13;&#10;   Einfaches digitales Filter&#13;&#10;   Filter berechnet den Mittelwert der Eingabewerte.&#13;&#10;****************************************************************&#13;&#10;     erstellt  :   BS  :   KW46/2001&#13;&#10;****************************************************************&#13;&#10;" Name="CyWork"/>
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT := EAX;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Easy_Filter::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_EASY_FILTER
1$UINT, 0$UINT, (SIZEOF(::Easy_Filter))$UINT, 
1$UINT, 2$UINT, 0$UINT, 
TO_UDINT(1463115239), "Easy_Filter", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Easy_Filter.output.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(1009177368), "output", 
//Clients:
(::Easy_Filter.input.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(796717159), "input", 
(::Easy_Filter.averages.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(4098349552), "averages", 
END_FUNCTION


#define USER_CNT_Easy_Filter 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Easy_Filter] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Easy_Filter::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Easy_Filter, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
	output.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF output.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


//*********************Inserted from .\code\C_Easy_Filter.st*********************



 



//[#ENGLISH]
//****************************************************************
//   Easy Digital Filter
//   Filter is only averaging the inputvalue
//****************************************************************
//   		Created			: 		BS		: 		KW46/2001
//****************************************************************
//[#DEUTSCH]
//****************************************************************
//   Einfaches digitales Filter
//   Filter berechnet den Mittelwert der Eingabewerte.
//****************************************************************
//   		erstellt		: 		BS		: 		KW46/2001
//****************************************************************
FUNCTION VIRTUAL GLOBAL Easy_Filter::CyWork
VAR_INPUT
	EAX		: UDINT;
END_VAR
VAR_OUTPUT
	state		: UDINT;
END_VAR

	input   	:= input.read();
	averages	:= averages.read();

	index_F += 1;

	IF averages <= 0 THEN
		index_F := 0;
	ELSIF index_F >= Averages THEN
		index_F := 0;
		first_full := 1;
	END_IF;

	Sum := Sum - filter_values[index_F] + input;
	filter_values[index_F] := input;

	IF averages > 0 & (index_F | first_Full) THEN
		IF averages > 20 | averages < 0 THEN
			averages := 20;
        END_IF;
		output := Sum / TO_DINT(averages);
	ELSE
		output := input;
	END_IF;

	state := READY$UDINT;
END_FUNCTION //VIRTUAL GLOBAL Easy_Filter::CyWork
//[#DEUTSCH]
//****************************************************************
//   Einfaches digitales Filter
//   Filter berechnet den Mittelwert der Eingabewerte.
//****************************************************************
//   		erstellt		: 		BS		: 		KW46/2001
//****************************************************************
//[#ENGLISH]
//****************************************************************
//   Easy Digital Filter
//   Filter is only averaging the inputvalue
//****************************************************************
//   		Created			: 		BS		: 		KW46/2001
//****************************************************************
FUNCTION VIRTUAL GLOBAL Easy_Filter::Init
	
	 Output := Input :=  Input.Read();
	 first_full := 0;
	 
	 (*FOR index_F := 0 TO 20 DO
		filter_values[index_F] := 0;
	 END_FOR;*)

	 _memset(#filter_values[0], 0, 21*sizeof(DINT));
	 Sum := 0;
	 index_F    := -1$USINT;

END_FUNCTION //VIRTUAL GLOBAL Easy_Filter::Init

