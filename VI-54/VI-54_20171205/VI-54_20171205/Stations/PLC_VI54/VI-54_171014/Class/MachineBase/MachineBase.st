//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "MachineBase"
	Revision           = "0.0"
	GUID               = "{3910EBD5-1155-4942-A1F1-4AC47E555246}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(600,240)">
	<Channels>
		<Server Name="ObjectServer" GUID="{B01F74BA-BF11-47EB-841E-AFE8EAF93168}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="RunningMode" GUID="{AAD3BBD9-7EE5-4790-BD55-FEE115A93B8B}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Stepper" GUID="{1D437C0E-4499-446E-8247-ECE536A13605}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="Standaard" Required="true" Internal="true"/>
	</Channels>
	<Network Name="MachineBase">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "Standaard"
				GUID       = "{C476F815-28DA-449B-9BCA-D79F5F9539BE}"
				Class      = "Standard"
				Position   = "(120,210)"
				Visualized = "false">
				<Channels>
					<Server Name="ClassSvr"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Standaard" Destination="Standaard.ClassSvr"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
MachineBase : CLASS
  //Servers:
	ObjectServer 	: SvrChCmd_DINT;
	Stepper 	: SvrCh_DINT;
	RunningMode 	: SvrCh_RunningStateEnum;
  //Clients:
	Standaard 	: CltChCmd_Standard;
  //Variables:
		GlobalDataPtr 	: ^GlobalDataStr;
		RecipePtr 	: ^DataRecipeStr;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL MyInit;
	
	FUNCTION VIRTUAL GLOBAL MyRtTask;
	
	FUNCTION VIRTUAL GLOBAL MyCyTask;
	
	FUNCTION VIRTUAL GLOBAL MyBackTask;
	
	FUNCTION GLOBAL SetGlobalDataPtr
		VAR_INPUT
			Ptr 	: ^GlobalDataStr;
		END_VAR
		VAR_OUTPUT
			ReturnPtr 	: ^GlobalDataStr;
		END_VAR;
	
	FUNCTION GLOBAL RtTask;
	
	FUNCTION GLOBAL CyTask;
	
	FUNCTION GLOBAL BgTask;
	
	FUNCTION GLOBAL InitTask
		VAR_INPUT
			SetGlobalPtr 	: ^GlobalDataStr;
			SetRecipePtr 	: ^DataRecipeStr;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ResetErrors;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using Standard


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB MachineBase::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_MACHINEBASE
0$UINT, 0$UINT, (SIZEOF(::MachineBase))$UINT, 
3$UINT, 1$UINT, 0$UINT, 
TO_UDINT(3119722310), "MachineBase", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::MachineBase.ObjectServer.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(3242468504), "ObjectServer", 
(::MachineBase.Stepper.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(663165702), "Stepper", 
(::MachineBase.RunningMode.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2955295395), "RunningMode", 
//Clients:
(::MachineBase.Standaard.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2905283977), "Standaard", TO_UDINT(3603188683), "Standard", 6$UINT, 1$UINT, 
END_FUNCTION


#define USER_CNT_MachineBase 5

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_MachineBase] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION MachineBase::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_MachineBase, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #M_WR_DIRECT();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #MyInit();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #MyRtTask();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #MyCyTask();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #MyBackTask();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[4]		:= #ResetErrors();

#pragma warning (default : 74)
	ObjectServer.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ObjectServer.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Stepper.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Stepper.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION VIRTUAL GLOBAL MachineBase::MyInit
    
    // alleen bij firstscan

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MachineBase::MyRtTask

    // Real time task

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MachineBase::MyCyTask

    //  Cycle time task

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MachineBase::MyBackTask

    // Background task    
    
END_FUNCTION


FUNCTION GLOBAL MachineBase::SetGlobalDataPtr
	VAR_INPUT
		Ptr 	: ^GlobalDataStr;
	END_VAR
	VAR_OUTPUT
		ReturnPtr 	: ^GlobalDataStr;
	END_VAR
  
  GlobalDataPtr := Ptr;
  
  ReturnPtr := GlobalDataPtr;

END_FUNCTION


FUNCTION GLOBAL MachineBase::RtTask

  MyRtTask();

END_FUNCTION


FUNCTION GLOBAL MachineBase::CyTask


  RunningMode := GlobalDataPtr^.gRunStatus.gRunStatusGlob;
  MyCyTask();

END_FUNCTION


FUNCTION GLOBAL MachineBase::BgTask

  Standaard.Background(EAX := 0);
  MyBackTask();

END_FUNCTION


FUNCTION GLOBAL MachineBase::InitTask
	VAR_INPUT
		SetGlobalPtr 	: ^GlobalDataStr;
		SetRecipePtr 	: ^DataRecipeStr;
	END_VAR

  // alleen bij firstscan
  GlobalDataPtr := SetGlobalPtr;
  RecipePtr     := SetRecipePtr;

  MyInit();

END_FUNCTION


FUNCTION VIRTUAL GLOBAL MachineBase::ResetErrors

END_FUNCTION
