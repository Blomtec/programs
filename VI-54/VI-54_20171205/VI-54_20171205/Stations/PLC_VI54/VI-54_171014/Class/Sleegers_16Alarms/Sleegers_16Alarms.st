//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION
#include "..\..\Class\_16Alarms\Defines.h"

(*!
<Class
	Name               = "Sleegers_16Alarms"
	Revision           = "2.2"
	GUID               = "{FB3EBFEB-59B5-4FB0-8994-704434E6CCA5}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	DefBackground      = "100 ms"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(600,180)">
	<Channels>
		<Server Name="AlarmActive" GUID="{4724F45F-63EA-4FED-8481-1A14A5E8C132}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="MachineName" GUID="{78883341-8044-4F2E-AD14-DF5A0B00568F}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="false"/>
		<Client Name="AlarmSleegers" Required="true" Internal="false"/>
		<Client Name="Group" Required="false" Internal="false"/>
		<Client Name="iAlarm01" Required="false" Internal="false"/>
		<Client Name="iAlarm02" Required="false" Internal="false"/>
		<Client Name="iAlarm03" Required="false" Internal="false"/>
		<Client Name="iAlarm04" Required="false" Internal="false"/>
		<Client Name="iAlarm05" Required="false" Internal="false"/>
		<Client Name="iAlarm06" Required="false" Internal="false"/>
		<Client Name="iAlarm07" Required="false" Internal="false"/>
		<Client Name="iAlarm08" Required="false" Internal="false"/>
		<Client Name="iAlarm09" Required="false" Internal="false"/>
		<Client Name="iAlarm10" Required="false" Internal="false"/>
		<Client Name="iAlarm11" Required="false" Internal="false"/>
		<Client Name="iAlarm12" Required="false" Internal="false"/>
		<Client Name="iAlarm13" Required="false" Internal="false"/>
		<Client Name="iAlarm14" Required="false" Internal="false"/>
		<Client Name="iAlarm15" Required="false" Internal="false"/>
		<Client Name="iAlarm16" Required="false" Internal="false"/>
		<Client Name="Reset" Required="false" Internal="false"/>
		<Client Name="Standard4" Required="true" Internal="true"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Class\_16Alarms\Defines.h" Include="true"/>
		</Files>
	</Dependencies>
	<Network Name="Sleegers_16Alarms">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name           = "Standard4"
				GUID           = "{5CE0B8ED-B3BB-47BB-9363-F9155CCAEA40}"
				Class          = "Standard"
				Position       = "(270,450)"
				Visualized     = "false"
				BackgroundTime = "1000 ms">
				<Channels>
					<Server Name="ClassSvr"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Standard4" Destination="Standard4.ClassSvr"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
Sleegers_16Alarms : CLASS
  //Servers:
	AlarmActive 	: SvrChCmd_DINT;
	MachineName 	: SvrCh_UDINT;
  //Clients:
	AlarmSleegers 	: CltChCmd_AlarmSleegersPara;
	Reset 	: CltCh_DINT;
	iAlarm01 	: CltCh_DINT;
	iAlarm02 	: CltCh_DINT;
	iAlarm03 	: CltCh_DINT;
	iAlarm04 	: CltCh_DINT;
	iAlarm05 	: CltCh_DINT;
	iAlarm06 	: CltCh_DINT;
	iAlarm07 	: CltCh_DINT;
	iAlarm08 	: CltCh_DINT;
	iAlarm09 	: CltCh_DINT;
	iAlarm10 	: CltCh_DINT;
	iAlarm11 	: CltCh_DINT;
	iAlarm12 	: CltCh_DINT;
	iAlarm13 	: CltCh_DINT;
	iAlarm14 	: CltCh_DINT;
	iAlarm15 	: CltCh_DINT;
	iAlarm16 	: CltCh_DINT;
	Group 	: CltCh_DINT;
	Standard4 	: CltChCmd_Standard;
  //Variables:
		BitsConfig : BDINT
		[
		];

		AlarmStr 	: tAlarm;
		SetResetBit 	: DINT;
		test 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION GLOBAL SetAlarms;
	
	FUNCTION VIRTUAL GLOBAL AlarmActive::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL AlarmActive::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using Standard
#pragma usingLtd AlarmSleegersPara


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Sleegers_16Alarms::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_SLEEGERS_16ALARMS
2$UINT, 2$UINT, (SIZEOF(::Sleegers_16Alarms))$UINT, 
2$UINT, 20$UINT, 0$UINT, 
TO_UDINT(4069192824), "Sleegers_16Alarms", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Sleegers_16Alarms.AlarmActive.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(165019020), "AlarmActive", 
(::Sleegers_16Alarms.MachineName.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(660909857), "MachineName", 
//Clients:
(::Sleegers_16Alarms.AlarmSleegers.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1107638062), "AlarmSleegers", TO_UDINT(2519434872), "AlarmSleegersPara", 0$UINT, 0$UINT, 
(::Sleegers_16Alarms.Reset.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2815000061), "Reset", 
(::Sleegers_16Alarms.iAlarm01.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(995831039), "iAlarm01", 
(::Sleegers_16Alarms.iAlarm02.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2723315013), "iAlarm02", 
(::Sleegers_16Alarms.iAlarm03.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3579137491), "iAlarm03", 
(::Sleegers_16Alarms.iAlarm04.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1261557872), "iAlarm04", 
(::Sleegers_16Alarms.iAlarm05.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1010231526), "iAlarm05", 
(::Sleegers_16Alarms.iAlarm06.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2772416860), "iAlarm06", 
(::Sleegers_16Alarms.iAlarm07.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3526920650), "iAlarm07", 
(::Sleegers_16Alarms.iAlarm08.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1116181595), "iAlarm08", 
(::Sleegers_16Alarms.iAlarm09.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(897623245), "iAlarm09", 
(::Sleegers_16Alarms.iAlarm10.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1430727976), "iAlarm10", 
(::Sleegers_16Alarms.iAlarm11.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(574627262), "iAlarm11", 
(::Sleegers_16Alarms.iAlarm12.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3142142980), "iAlarm12", 
(::Sleegers_16Alarms.iAlarm13.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3427695762), "iAlarm13", 
(::Sleegers_16Alarms.iAlarm14.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1378543921), "iAlarm14", 
(::Sleegers_16Alarms.iAlarm15.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(623761831), "iAlarm15", 
(::Sleegers_16Alarms.iAlarm16.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3156510749), "iAlarm16", 
(::Sleegers_16Alarms.Group.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2593425013), "Group", 
(::Sleegers_16Alarms.Standard4.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(4292265035), "Standard4", TO_UDINT(3603188683), "Standard", 6$UINT, 1$UINT, 
END_FUNCTION


#define USER_CNT_Sleegers_16Alarms 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Sleegers_16Alarms] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Sleegers_16Alarms::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Sleegers_16Alarms, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	vmt.CmdTable.Write		:= #Write();
	vmt.CmdTable.Init		:= #Init();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	AlarmActive.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF AlarmActive.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	MachineName.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF MachineName.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION VIRTUAL GLOBAL Sleegers_16Alarms::Init

// we check if we have a invert bit !!
  BitsConfig.1 := (iAlarm01 = 0 | iAlarm01 = 2);   // if we give a FIX 1 or 3 on client the signal is inverterd !! 
  BitsConfig.2 := (iAlarm02 = 0 | iAlarm02 = 2);
  BitsConfig.3 := (iAlarm03 = 0 | iAlarm03 = 2);
  BitsConfig.4 := (iAlarm04 = 0 | iAlarm04 = 2);
  BitsConfig.5 := (iAlarm05 = 0 | iAlarm05 = 2);
  BitsConfig.6 := (iAlarm06 = 0 | iAlarm06 = 2);
  BitsConfig.7 := (iAlarm07 = 0 | iAlarm07 = 2);
  BitsConfig.8 := (iAlarm08 = 0 | iAlarm08 = 2);
  BitsConfig.9 := (iAlarm09 = 0 | iAlarm09 = 2);
  BitsConfig.10:= (iAlarm10 = 0 | iAlarm10 = 2);
  BitsConfig.11:= (iAlarm11 = 0 | iAlarm11 = 2);
  BitsConfig.12:= (iAlarm12 = 0 | iAlarm12 = 2);
  BitsConfig.13:= (iAlarm13 = 0 | iAlarm13 = 2);
  BitsConfig.14:= (iAlarm14 = 0 | iAlarm14 = 2);
  BitsConfig.15:= (iAlarm15 = 0 | iAlarm15 = 2);
  BitsConfig.16:= (iAlarm16 = 0 | iAlarm16 = 2);

  // Set names to alarmclasses
  AlarmSleegers.MyInit(iStationNbr:= 0, iMachineNbr:= to_dint(MachineName * 100));
  
END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sleegers_16Alarms::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  VAR
  	VarAlarmStr : Array[0..16] of Dint;
  END_VAR


  // Set Array
  SetAlarms();
  AlarmSleegers.AlarmState(AlarmStr:= AlarmStr);

  test := sizeof(tAlarm);
  
  // Set VarAlarm to '0'
  _memset(dest:= #VarAlarmStr, usByte:= 0, cntr:= sizeof(tAlarm));
  // Check of there is a Alarm active
  if _memcmp(ptr1:= #AlarmStr, ptr2:= #VarAlarmStr, cntr:= sizeof(tAlarm)) = 0 then
    AlarmActive := 0;
  else
    AlarmActive := 1;
    SetResetBit := 1; // Set resetBit when errors
  end_if;

	state := READY;

END_FUNCTION

FUNCTION VIRTUAL GLOBAL Sleegers_16Alarms::AlarmActive::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	output := AlarmActive;

END_FUNCTION

FUNCTION VIRTUAL GLOBAL Sleegers_16Alarms::AlarmActive::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	//AlarmActive := input;
  
  if input <> 0 then 
    // Reset values
    _memset(dest:= #AlarmStr, usByte:= 0, cntr:= sizeof(tAlarm));
    SetResetBit := 0;
  end_if;
 	result := input;

END_FUNCTION

FUNCTION GLOBAL Sleegers_16Alarms::SetAlarms

  // Reset 
  AlarmStr[0] := SetResetBit;
  // Alarm 1
  if IsClientConnected(#iAlarm01) then
    AlarmStr[1] := iAlarm01 := (iAlarm01.read() = to_dint (BitsConfig.1));
  else
    AlarmStr[1] := 0;
  end_if; 
  // Alarm 2
  if IsClientConnected(#iAlarm02) then
    AlarmStr[2] := iAlarm02 := (iAlarm02.read() = to_dint (BitsConfig.2));
  else
    AlarmStr[2] := 0;
  end_if;  
  // Alarm 3
  if IsClientConnected(#iAlarm03) then
    AlarmStr[3] := iAlarm03 := (iAlarm03.read() = to_dint (BitsConfig.3));
  else
    AlarmStr[3] := 0;
  end_if;  
  // Alarm 4
  if IsClientConnected(#iAlarm04) then
    AlarmStr[4] := iAlarm04 := (iAlarm04.read() = to_dint (BitsConfig.4));
  else
    AlarmStr[4] := 0;
  end_if;
  // Alarm 5
  if IsClientConnected(#iAlarm05) then
    AlarmStr[5] := iAlarm05 := (iAlarm05.read() = to_dint (BitsConfig.5));
  else
    AlarmStr[5] := 0;
  end_if;  
  // Alarm 6
  if IsClientConnected(#iAlarm06) then
    AlarmStr[6] := iAlarm06 := (iAlarm06.read() = to_dint (BitsConfig.6));
  else
    AlarmStr[6] := 0;
  end_if;  
  // Alarm 7
  if IsClientConnected(#iAlarm07) then
    AlarmStr[7] := iAlarm07 := (iAlarm07.read() = to_dint (BitsConfig.7));
  else
    AlarmStr[7] := 0;
  end_if;  
  // Alarm 8
  if IsClientConnected(#iAlarm08) then
    AlarmStr[8] := iAlarm08 := (iAlarm08.read() = to_dint (BitsConfig.8));
  else
    AlarmStr[8] := 0;
  end_if;  
  // Alarm 9
  if IsClientConnected(#iAlarm09) then
    AlarmStr[9] := iAlarm09 := (iAlarm09.read() = to_dint (BitsConfig.9));
  else
    AlarmStr[9] := 0;
  end_if;  
  // Alarm 10
  if IsClientConnected(#iAlarm10) then
    AlarmStr[10] := iAlarm01 := (iAlarm10.read() = to_dint (BitsConfig.10));
  else
    AlarmStr[10] := 0;
  end_if;  
  // Alarm 11
  if IsClientConnected(#iAlarm11) then
    AlarmStr[11] := iAlarm11 := (iAlarm11.read() = to_dint (BitsConfig.11));
  else
    AlarmStr[11] := 0;
  end_if;  
  // Alarm 12
  if IsClientConnected(#iAlarm12) then
    AlarmStr[12] := iAlarm12 := (iAlarm12.read() = to_dint (BitsConfig.12));
  else
    AlarmStr[12] := 0;
  end_if;  
  // Alarm 13
  if IsClientConnected(#iAlarm13) then
    AlarmStr[13] := iAlarm13 := (iAlarm13.read() = to_dint (BitsConfig.13));
  else
    AlarmStr[13] := 0;
  end_if;  
  // Alarm 14
  if IsClientConnected(#iAlarm14) then
    AlarmStr[14] := iAlarm14 := (iAlarm14.read() = to_dint (BitsConfig.14));
  else
    AlarmStr[14] := 0;
  end_if; 
  // Alarm 15
  if IsClientConnected(#iAlarm15) then
    AlarmStr[15] := iAlarm15 := (iAlarm15.read() = to_dint (BitsConfig.15));
  else
    AlarmStr[15] := 0;
  end_if;  
  // Alarm 16
  if IsClientConnected(#iAlarm16) then
    AlarmStr[16] := iAlarm16 := (iAlarm16.read() = to_dint (BitsConfig.16));
  else
    AlarmStr[16] := 0;
  end_if;  




END_FUNCTION
