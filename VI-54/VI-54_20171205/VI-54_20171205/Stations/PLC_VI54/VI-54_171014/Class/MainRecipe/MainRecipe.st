//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "MainRecipe"
	Revision           = "0.0"
	GUID               = "{F3BF22A0-894B-4099-9C91-C2A62FA832C5}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(630,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{D59B0629-BB10-4945-9281-B30D25DDB047}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="DataRecipe" Required="true" Internal="true"/>
	</Channels>
	<Network Name="MainRecipe">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "DataRecipe"
				GUID       = "{353F54A6-25E0-4C02-B4E7-23BF06DEECE3}"
				Class      = "MerkerEx"
				Position   = "(210,180)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="m_udLength"/>
					<Client Name="ThreadSafe" Value="0"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.DataRecipe" Destination="DataRecipe.m_udLength"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
MainRecipe : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	DataRecipe 	: CltChCmd_MerkerEx;
  //Variables:
		RecipePtr 	: ^DataRecipeStr;
		MyFirstScan 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION GLOBAL GetPointer
		VAR_OUTPUT
			Ptr 	: ^DataRecipeStr;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using MerkerEx


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB MainRecipe::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_MAINRECIPE
0$UINT, 0$UINT, (SIZEOF(::MainRecipe))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(4168348626), "MainRecipe", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::MainRecipe.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::MainRecipe.DataRecipe.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(361794571), "DataRecipe", TO_UDINT(2225119864), "MerkerEx", 1$UINT, 21$UINT, 
END_FUNCTION


#define USER_CNT_MainRecipe 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_MainRecipe] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION MainRecipe::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_MainRecipe, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL MainRecipe::Init

  // Check size
  if DataRecipe.GetSize() <> sizeof(DataRecipeStr) then
    DataRecipe.SetSize(udSize:= sizeof(DataRecipeStr));
  end_if;
  
  // Set pointer
  if MyFirstScan = 0 then
    RecipePtr$^USINT := DataRecipe.GetDataPtr();
    MyFirstScan := 1;
  end_if;

END_FUNCTION

FUNCTION GLOBAL MainRecipe::GetPointer
	VAR_OUTPUT
		Ptr 	: ^DataRecipeStr;
	END_VAR
  
  Ptr := RecipePtr;

END_FUNCTION
