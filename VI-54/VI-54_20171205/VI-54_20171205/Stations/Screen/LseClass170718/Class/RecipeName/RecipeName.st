//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "RecipeName"
	Revision           = "0.0"
	GUID               = "{608E1611-6F7E-4B3C-B7D1-500DCD6981E8}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(360,300)">
	<Channels>
		<Server Name="R_Date" GUID="{5E859F2C-5548-4178-85A4-4643610FB2E3}" Visualized="true" Remotely="true" Initialize="true" WriteProtected="false" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="R_Name" GUID="{12FD6D5D-EC61-4581-8C66-3FD5B779C2C1}" Visualized="true" Remotely="true" Initialize="true" WriteProtected="false" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="R_Time" GUID="{FA3C3FC4-F9A4-4495-A66D-5FFF7047F39B}" Visualized="true" Remotely="true" Initialize="true" WriteProtected="false" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="RecipeNbr" GUID="{960C3755-D449-4A1E-B2AF-4F24DC6A33D2}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="Chain" Required="false" Internal="false"/>
		<Client Name="DateString" Required="true" Internal="true"/>
		<Client Name="NameString" Required="true" Internal="true"/>
		<Client Name="TimeString" Required="true" Internal="true"/>
	</Channels>
	<Network Name="RecipeName">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "DateString"
				GUID       = "{85E8D3D3-14CE-4213-A222-B39BBA36352E}"
				Class      = "String"
				Position   = "(240,360)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
			<Object
				Name       = "NameString"
				GUID       = "{50457639-D522-44A0-B94B-819019A7608D}"
				Class      = "String"
				Position   = "(240,210)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
			<Object
				Name       = "TimeString"
				GUID       = "{8262F18F-6DC8-4383-83F6-1FA93989CA3D}"
				Class      = "String"
				Position   = "(240,510)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.NameString" Destination="NameString.Data"/>
			<Connection Source="this.DateString" Destination="DateString.Data"/>
			<Connection Source="this.TimeString" Destination="TimeString.Data"/>
			<Connection Source="this.R_Name" Destination="NameString.Data" Vertices="(968,270),(796,300),"/>
			<Connection Source="this.R_Date" Destination="DateString.Data" Vertices="(968,330),(796,450),"/>
			<Connection Source="this.R_Time" Destination="TimeString.Data" Vertices="(968,390),(796,600),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
RecipeName : CLASS
  //Servers:
	RecipeNbr 	: SvrChCmd_DINT;
	R_Name 	: SvrCh_UDINT;
	R_Date 	: SvrCh_UDINT;
	R_Time 	: SvrCh_UDINT;
  //Clients:
	Chain 	: CltChCmd_RecipeName;
	NameString 	: CltChCmd_String;
	DateString 	: CltChCmd_String;
	TimeString 	: CltChCmd_String;
  //Variables:
		TextName 	: DINT;
  //Functions:
	
	FUNCTION GLOBAL MyInit
		VAR_INPUT
			Number 	: DINT;
		END_VAR
		VAR_OUTPUT
			MaxChain 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL WriteNbr
		VAR_INPUT
			Nbr 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL WriteName
		VAR_INPUT
			Nbr 	: DINT;
			Name 	: ^CHAR;
			Lenght 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL ReadName
		VAR_INPUT
			Nbr 	: DINT;
			Dest 	: ^CHAR;
			MaxSize 	: DINT;
		END_VAR
		VAR_OUTPUT
			Name 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL WriteDate
		VAR_INPUT
			Nbr 	: DINT;
			Dates 	: ^CHAR;
			Lenght 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL ReadDate
		VAR_INPUT
			Nbr 	: DINT;
			Dest 	: ^CHAR;
			MaxSize 	: DINT;
		END_VAR
		VAR_OUTPUT
			Dates 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL WriteTime
		VAR_INPUT
			Nbr 	: DINT;
			Times 	: ^CHAR;
			Lenght 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL ReadTime
		VAR_INPUT
			Nbr 	: DINT;
			Dest 	: ^CHAR;
			MaxSize 	: DINT;
		END_VAR
		VAR_OUTPUT
			Times 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using String


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB RecipeName::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_RECIPENAME
0$UINT, 0$UINT, (SIZEOF(::RecipeName))$UINT, 
4$UINT, 4$UINT, 0$UINT, 
TO_UDINT(1770004111), "RecipeName", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::RecipeName.RecipeNbr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(798187462), "RecipeNbr", 
(::RecipeName.R_Name.pMeth)$UINT, _CH_SVR$UINT, 2#0000000001000000$UINT, TO_UDINT(53812459), "R_Name", 
(::RecipeName.R_Date.pMeth)$UINT, _CH_SVR$UINT, 2#0000000001000000$UINT, TO_UDINT(4152907159), "R_Date", 
(::RecipeName.R_Time.pMeth)$UINT, _CH_SVR$UINT, 2#0000000001000000$UINT, TO_UDINT(847444648), "R_Time", 
//Clients:
(::RecipeName.Chain.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(1180097146), "Chain", TO_UDINT(1770004111), "RecipeName", 0$UINT, 0$UINT, 
(::RecipeName.NameString.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3510571343), "NameString", TO_UDINT(1850111279), "String", 1$UINT, 10$UINT, 
(::RecipeName.DateString.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2783554438), "DateString", TO_UDINT(1850111279), "String", 1$UINT, 10$UINT, 
(::RecipeName.TimeString.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1517003382), "TimeString", TO_UDINT(1850111279), "String", 1$UINT, 10$UINT, 
END_FUNCTION


#define USER_CNT_RecipeName 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_RecipeName] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION RecipeName::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_RecipeName, pCmd := #vmt.CmdTable);
	RecipeNbr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF RecipeNbr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	R_Name.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF R_Name.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	R_Date.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF R_Date.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	R_Time.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF R_Time.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION GLOBAL RecipeName::MyInit
	VAR_INPUT
		Number 	: DINT;
	END_VAR
	VAR_OUTPUT
		MaxChain 	: DINT;
	END_VAR
  
  RecipeNbr := Number;
  
  if IsClientConnected(#Chain) then
    MAxChain := Chain.MyInit(Number:= RecipeNbr + 1);
  else
    MaxChain := RecipeNbr;
  end_if;

END_FUNCTION

FUNCTION GLOBAL RecipeName::WriteNbr
	VAR_INPUT
		Nbr 	: DINT;
	END_VAR

  RecipeNbr := Nbr; 

END_FUNCTION

FUNCTION GLOBAL RecipeName::WriteName
	VAR_INPUT
		Nbr 	: DINT;
		Name 	: ^CHAR;
		Lenght 	: DINT;
	END_VAR
  
  if Nbr = RecipeNbr then
    NameString.WriteDataOff(udLen:= to_Udint(Lenght), 
                            udOff:= 0, 
                            pData:= Name);
  elsif IsClientConnected(#Chain) then
    Chain.WriteName(Nbr:= Nbr, Name:= Name, Lenght:= Lenght);
  end_if;

END_FUNCTION

FUNCTION GLOBAL RecipeName::ReadName
	VAR_INPUT
		Nbr 	: DINT;
		Dest 	: ^CHAR;
		MaxSize 	: DINT;
	END_VAR
	VAR_OUTPUT
		Name 	: DINT;
	END_VAR
 
  if Nbr = RecipeNbr then
    Name := to_dint(NameString.ReadDataOff(udOff:= 0, pData:= Dest, udMax:= to_udint(MaxSize)));
  elsif IsClientConnected(#Chain) then
    Name := Chain.ReadName(Nbr:= Nbr, Dest:= Dest, MaxSize:= MaxSize);
  end_if;
  
END_FUNCTION

FUNCTION GLOBAL RecipeName::WriteDate
	VAR_INPUT
		Nbr 	: DINT;
		Dates 	: ^CHAR;
		Lenght 	: DINT;
	END_VAR
  
  if Nbr = RecipeNbr then
    DateString.WriteDataOff(udLen:= to_Udint(Lenght), 
                            udOff:= 0, 
                            pData:= Dates);
  elsif IsClientConnected(#Chain) then
    Chain.WriteDate(Nbr:= Nbr, Dates:= Dates, Lenght:= Lenght);
  end_if;

END_FUNCTION

FUNCTION GLOBAL RecipeName::ReadDate
	VAR_INPUT
		Nbr 	: DINT;
		Dest 	: ^CHAR;
		MaxSize 	: DINT;
	END_VAR
	VAR_OUTPUT
		Dates 	: DINT;
	END_VAR
  
  if Nbr = RecipeNbr then
    Dates := to_dint(DateString.ReadDataOff(udOff:= 0, pData:= Dest, udMax:= to_udint(MaxSize)));
  elsif IsClientConnected(#Chain) then
    Dates := Chain.ReadDate(Nbr:= Nbr, Dest:= Dest, MaxSize:= MaxSize);
  end_if;

END_FUNCTION

FUNCTION GLOBAL RecipeName::WriteTime
	VAR_INPUT
		Nbr 	: DINT;
		Times 	: ^CHAR;
		Lenght 	: DINT;
	END_VAR
  
  if Nbr = RecipeNbr then
    TimeString.WriteDataOff(udLen:= to_Udint(Lenght), 
                            udOff:= 0, 
                            pData:= Times);
  elsif IsClientConnected(#Chain) then
    Chain.WriteTime(Nbr:= Nbr, Times:= Times, Lenght:= Lenght);
  end_if;

END_FUNCTION

FUNCTION GLOBAL RecipeName::ReadTime
	VAR_INPUT
		Nbr 	: DINT;
		Dest 	: ^CHAR;
		MaxSize 	: DINT;
	END_VAR
	VAR_OUTPUT
		Times 	: DINT;
	END_VAR
  
  if Nbr = RecipeNbr then
    Times := to_dint(TimeString.ReadDataOff(udOff:= 0, pData:= Dest, udMax:= to_udint(MaxSize)));
  elsif IsClientConnected(#Chain) then
    Times := Chain.ReadTime(Nbr:= Nbr, Dest:= Dest, MaxSize:= MaxSize);
  end_if;

END_FUNCTION
