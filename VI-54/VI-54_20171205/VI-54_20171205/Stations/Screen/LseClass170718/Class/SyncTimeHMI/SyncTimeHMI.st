//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "SyncTimeHMI"
	Revision           = "1.0"
	GUID               = "{861E4EDF-4F06-4F3E-8390-CB2ECE4E815E}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(540,180)"
	Comment            = "class reads date and time from two clients (within the adjusted zycletime)&#13;&#10;and writes these values to the servers">
	<Channels>
		<Server Name="sSyncDate" GUID="{3D757C3C-6FDA-4992-BF44-5E487B23E66E}" Visualized="true" Remotely="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="server for sync date"/>
		<Server Name="sSyncTime" GUID="{1369DF3B-1062-4103-A355-B85C08AAC6B1}" Visualized="true" Remotely="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="server for sync time"/>
		<Client Name="ActDate" Required="true" Internal="false" Comment="actual date"/>
		<Client Name="ActTime" Required="true" Internal="false" Comment="actual time"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.0" Date="2015-11-11" Author="hötant" Company="Sigmatek" Description="creation of class"/>
	</RevDoku>
</Class>
*)
SyncTimeHMI : CLASS
  //Servers:
	sSyncDate 	: SvrChCmd_HDINT;
	sSyncTime 	: SvrCh_HDINT;
  //Clients:
	ActDate 	: CltCh_HDINT;
	ActTime 	: CltCh_HDINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL sSyncDate::Read
		VAR_OUTPUT
			output (EAX) 	: HDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL sSyncTime::Read
		VAR_OUTPUT
			output (EAX) 	: HDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB SyncTimeHMI::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_SYNCTIMEHMI
1$UINT, 0$UINT, (SIZEOF(::SyncTimeHMI))$UINT, 
2$UINT, 2$UINT, 0$UINT, 
TO_UDINT(3114404899), "SyncTimeHMI", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::SyncTimeHMI.sSyncDate.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(1467776267), "sSyncDate", 
(::SyncTimeHMI.sSyncTime.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2457260596), "sSyncTime", 
//Clients:
(::SyncTimeHMI.ActDate.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2248193448), "ActDate", 
(::SyncTimeHMI.ActTime.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(1124735639), "ActTime", 
END_FUNCTION


#define USER_CNT_SyncTimeHMI 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_SyncTimeHMI] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION SyncTimeHMI::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_SyncTimeHMI, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	sSyncDate.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF sSyncDate.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	sSyncTime.pMeth			:= StoreMethod( #sSyncTime::Read(), #M_NO_F() );
	IF sSyncTime.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION




FUNCTION VIRTUAL GLOBAL SyncTimeHMI::sSyncDate::Read
	VAR_OUTPUT
		output (EAX) 	: HDINT;
	END_VAR

	output := sSyncDate := ActDate := ActDate.Read();

END_FUNCTION


FUNCTION VIRTUAL GLOBAL SyncTimeHMI::sSyncTime::Read
	VAR_OUTPUT
		output (EAX) 	: HDINT;
	END_VAR

	output := sSyncTime :=ActTime :=  ActTime.Read();

END_FUNCTION
