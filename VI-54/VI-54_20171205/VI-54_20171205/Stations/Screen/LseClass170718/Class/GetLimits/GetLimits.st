//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "GetLimits"
	Revision           = "0.0"
	GUID               = "{E1B3D090-F26C-4E60-B24E-57FF846BF722}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(600,480)">
	<Channels>
		<Server Name="AmaxRobot_mm" GUID="{662D53AC-FE80-4A09-98B5-9D5FD8D23684}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="AmaxRobot_units" GUID="{BA7152F2-17FA-4433-9740-9FE342A50F47}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="MaxSpeedBelt_Mmin" GUID="{ADB51397-FD96-4612-9B1F-5523228DE7CA}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="MaxSpeedBelt_units" GUID="{67EB111B-8379-485B-A116-9613FB478B22}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMaxRas_gr" GUID="{27958FCF-C0E7-4D15-83EC-239DAD06DB70}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMaxRas_units" GUID="{8F22C269-8636-4E61-B64D-E463BD24A261}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMaxXas_mm" GUID="{95F748CB-87AF-4D7E-BE39-8FE7115DFB08}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMaxXas_units" GUID="{1C4868B3-F603-49EF-8578-3A966AD79488}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMaxYas_mm" GUID="{BE7BC6C5-4D7F-4EE9-80C0-D3C714FAECA1}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMaxYas_units" GUID="{EBA6042F-A0A8-4F1D-BB1E-C29B6892369B}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMaxZas_mm" GUID="{F7FCA1EE-F582-4F0A-80E9-B66816C12FE6}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMaxZas_units" GUID="{7CBC2461-79D8-4B76-8DB6-C3D58F6D7619}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMinRas_gr" GUID="{64A57840-E7BE-46B4-9D30-6CCABE110248}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMinRas_units" GUID="{7CB8E45F-9C21-4E5A-A68B-D2068FB15CAF}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMinXas_mm" GUID="{405F472C-0FFD-427D-9DC8-6FF07CC45AE3}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMinXas_units" GUID="{7A5B7B5B-B8CA-471B-9CCD-BA7FB8328C33}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMinYas_mm" GUID="{D9097E0B-1017-4F93-BC4C-1364288A309B}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMinYas_units" GUID="{944AC2E8-2C6F-4106-93A4-601638F640F8}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMinZas_mm" GUID="{E337B641-2B7A-4A64-AB51-CD6151FCC50F}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SwMinZas_units" GUID="{9F68908C-3C94-4E38-BBD4-3E324D956395}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="VmaxRobot_mm" GUID="{CF1D6902-BED9-4905-ADBF-FE98B6799496}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="VmaxRobot_units" GUID="{221587F7-FF13-4393-B6A1-7A74B4AD0A02}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="Belt" Required="true" Internal="false"/>
		<Client Name="Ras" Required="true" Internal="false"/>
		<Client Name="Xas" Required="true" Internal="false"/>
		<Client Name="Yas" Required="true" Internal="false"/>
		<Client Name="Zas" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
GetLimits : CLASS
  //Servers:
	SwMaxXas_mm 	: SvrChCmd_DINT;
	SwMaxXas_units 	: SvrCh_DINT;
	SwMinXas_mm 	: SvrCh_DINT;
	SwMinXas_units 	: SvrCh_DINT;
	SwMaxYas_mm 	: SvrCh_DINT;
	SwMaxYas_units 	: SvrCh_DINT;
	SwMinYas_mm 	: SvrCh_DINT;
	SwMinYas_units 	: SvrCh_DINT;
	SwMaxZas_mm 	: SvrCh_DINT;
	SwMaxZas_units 	: SvrCh_DINT;
	SwMinZas_mm 	: SvrCh_DINT;
	SwMinZas_units 	: SvrCh_DINT;
	SwMaxRas_gr 	: SvrCh_DINT;
	SwMaxRas_units 	: SvrCh_DINT;
	SwMinRas_gr 	: SvrCh_DINT;
	SwMinRas_units 	: SvrCh_DINT;
	MaxSpeedBelt_Mmin 	: SvrCh_DINT;
	MaxSpeedBelt_units 	: SvrCh_DINT;
	VmaxRobot_mm 	: SvrCh_DINT;
	VmaxRobot_units 	: SvrCh_DINT;
	AmaxRobot_mm 	: SvrCh_DINT;
	AmaxRobot_units 	: SvrCh_DINT;
  //Clients:
	Xas 	: CltChCmd__LMCAxis;
	Yas 	: CltChCmd__LMCAxis;
	Zas 	: CltChCmd__LMCAxis;
	Ras 	: CltChCmd__LMCAxis;
	Belt 	: CltChCmd__LMCAxis;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd _LMCAxis


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB GetLimits::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_GETLIMITS
0$UINT, 0$UINT, (SIZEOF(::GetLimits))$UINT, 
22$UINT, 5$UINT, 0$UINT, 
TO_UDINT(4259587539), "GetLimits", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::GetLimits.SwMaxXas_mm.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(2104436940), "SwMaxXas_mm", 
(::GetLimits.SwMaxXas_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4135533012), "SwMaxXas_units", 
(::GetLimits.SwMinXas_mm.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2860817037), "SwMinXas_mm", 
(::GetLimits.SwMinXas_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1712073022), "SwMinXas_units", 
(::GetLimits.SwMaxYas_mm.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3056860009), "SwMaxYas_mm", 
(::GetLimits.SwMaxYas_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3775147415), "SwMaxYas_units", 
(::GetLimits.SwMinYas_mm.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1641564456), "SwMinYas_mm", 
(::GetLimits.SwMinYas_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1903639933), "SwMinYas_units", 
(::GetLimits.SwMaxZas_mm.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(816286151), "SwMaxZas_mm", 
(::GetLimits.SwMaxZas_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3632861522), "SwMaxZas_units", 
(::GetLimits.SwMinZas_mm.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3880532870), "SwMinZas_mm", 
(::GetLimits.SwMinZas_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1224343992), "SwMinZas_units", 
(::GetLimits.SwMaxRas_gr.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2870210261), "SwMaxRas_gr", 
(::GetLimits.SwMaxRas_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1666298698), "SwMaxRas_units", 
(::GetLimits.SwMinRas_gr.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2096651412), "SwMinRas_gr", 
(::GetLimits.SwMinRas_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4079133600), "SwMinRas_units", 
(::GetLimits.MaxSpeedBelt_Mmin.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(326279027), "MaxSpeedBelt_Mmin", 
(::GetLimits.MaxSpeedBelt_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(460797100), "MaxSpeedBelt_units", 
(::GetLimits.VmaxRobot_mm.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1593543250), "VmaxRobot_mm", 
(::GetLimits.VmaxRobot_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1788945723), "VmaxRobot_units", 
(::GetLimits.AmaxRobot_mm.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(645631521), "AmaxRobot_mm", 
(::GetLimits.AmaxRobot_units.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3049436526), "AmaxRobot_units", 
//Clients:
(::GetLimits.Xas.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2263799824), "Xas", TO_UDINT(1422175863), "_LMCAxis", 1$UINT, 70$UINT, 
(::GetLimits.Yas.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2267853351), "Yas", TO_UDINT(1422175863), "_LMCAxis", 1$UINT, 70$UINT, 
(::GetLimits.Zas.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2238319742), "Zas", TO_UDINT(1422175863), "_LMCAxis", 1$UINT, 70$UINT, 
(::GetLimits.Ras.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2339986886), "Ras", TO_UDINT(1422175863), "_LMCAxis", 1$UINT, 70$UINT, 
(::GetLimits.Belt.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1455592805), "Belt", TO_UDINT(1422175863), "_LMCAxis", 1$UINT, 70$UINT, 
END_FUNCTION


#define USER_CNT_GetLimits 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_GetLimits] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION GetLimits::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_GetLimits, pCmd := #vmt.CmdTable);
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	SwMaxXas_mm.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF SwMaxXas_mm.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION VIRTUAL GLOBAL GetLimits::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

  // Xas  
  SwMaxXas_units      := Xas.ReadSWEndPos(Mode:=LMCAXIS_RD_SWMAX_APPUNIT); // in units
  SwMinXas_units      := Xas.ReadSWEndPos(Mode:=LMCAXIS_RD_SWMIN_APPUNIT); // in units
  SwMaxXas_mm         := SwMaxXas_units/cIntUnitsTo_mm; // in mm
  SwMinXas_mm         := SwMinXas_units/cIntUnitsTo_mm; // in mm
  
  // Yas
  SwMaxYas_units      := Yas.ReadSWEndPos(Mode:=LMCAXIS_RD_SWMAX_APPUNIT); // in units
  SwMinYas_units      := Yas.ReadSWEndPos(Mode:=LMCAXIS_RD_SWMIN_APPUNIT); // in units
  SwMaxYas_mm         := SwMaxYas_units/cIntUnitsTo_mm; // in mm
  SwMinYas_mm         := SwMinYas_units/cIntUnitsTo_mm; // in mm
  
  // Zas
  SwMaxZas_units      := Zas.ReadSWEndPos(Mode:=LMCAXIS_RD_SWMAX_APPUNIT); // in units
  SwMinZas_units      := Zas.ReadSWEndPos(Mode:=LMCAXIS_RD_SWMIN_APPUNIT); // in units
  SwMaxZas_mm         := SwMaxZas_units/cIntUnitsTo_mm; // in mm
  SwMinZas_mm         := SwMinZas_units/cIntUnitsTo_mm; // in mm
  
  // Ras
  SwMaxRas_units      := Ras.ReadSWEndPos(Mode:=LMCAXIS_RD_SWMAX_APPUNIT); // in units
  SwMinRas_units      := Ras.ReadSWEndPos(Mode:=LMCAXIS_RD_SWMIN_APPUNIT); // in units
  SwMaxRas_gr         := SwMaxRas_units/cIntUnitsTo_mm; // in mm
  SwMinRas_gr         := SwMinRas_units/cIntUnitsTo_mm; // in mm
  
  // Belt
  MaxSpeedBelt_units  := Belt.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0); // in units
  MaxSpeedBelt_Mmin   := MaxSpeedBelt_units * 6 / 10000; // M/Min


  // Robot
  if Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0) <= Yas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0) <= Zas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0)  then
    VmaxRobot_units := Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0);
  elsif Yas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0) <= Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0) <= Zas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0) then   
    VmaxRobot_units := Yas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0);
  elsif Zas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0) <= Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0)  <= Yas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0) then     
    VmaxRobot_units := Zas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0);
  else
    VmaxRobot_units := Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_V_MAX, mode:=0);
  end_if;  
  VmaxRobot_mm := VmaxRobot_units/cIntUnitsTo_mm;
 
  if Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0) <= Yas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0) <= Zas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0)  then
    AmaxRobot_units := Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0);
  elsif Yas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0) <= Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0) <= Zas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0) then   
    AmaxRobot_units := Yas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0);
  elsif Zas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0) <= Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0)  <= Yas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0) then     
    AmaxRobot_units := Zas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0);
  else
    AmaxRobot_units := Xas.ReadParameter(ParNr:=LMCAXIS_PAR_RD_A_MAX, mode:=0);
  end_if;  
  AmaxRobot_mm := AmaxRobot_units/cIntUnitsTo_mm;

	state := READY;

END_FUNCTION
