//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Controller"
	Revision           = "1.41"
	GUID               = "{2EE15EB7-1F89-11D5-90C4-006063018AE8}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "Base class for the different types of the controller">
	<Channels>
		<Server Name="Signal_Input" GUID="{2EE15EB8-1F89-11D5-90C4-006063018AE8}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="This server shows the actual internal control variable and is &#13;&#10;connected to the CNC class."/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.41" Date="2015-03-06" Author="SatChr" Company="Sigmatek" Description="Improvement: New methodes: ControlLongReal, CheckHwReady, ReadActPosition, ReadPDO, IsReadyToSwitchOn (for future use)"/>
		<Dokumentation Revision="1.40" Date="2013-07-18" Author="SliMic" Company="Sigmatek" Description="1. Add some comments to the methodes and variables"/>
		<Dokumentation Revision="1.30" Date="2012-09-27" Author="RauAnd" Company="Sigmatek" Description="Modified for use with the _LMCAxis class."/>
		<Dokumentation Revision="1.20" Date="2011-05-02" Author="FuchsH" Company="Sigmatek" Description="Comments newly formatted."/>
		<Dokumentation Revision="1.10" Date="08.04.2010" Author="RauAnd" Company="Sigmatek" Description="Updating of the clients, server and methods documentation"/>
		<Dokumentation Revision="1.2" Date="22.01.2010" Author="RauAnd" Company="Sigmatek" Description="Updating of the clients, server and methods documentation"/>
		<Dokumentation Revision="1.1" Date="05.05.2008" Author="Rauand" Company="Sigmatek" Description="Improvement to use the position control in the drive"/>
		<Dokumentation Revision="1.0" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
</Class>
*)
Controller : CLASS
	TYPE
	  _AXISCLASS :
	  (
	    _AXIS_CNC,
	    _AXIS_LMCAXIS,
	    _AXIS_CNC_NO_HW,
	    _AXIS_LMCAXIS_NO_HW,
	    _AXIS_CNC_OPT_HWCLASS_v1,
	    _AXIS_LMCAXIS_OPT_HWCLASS_v1
	  )$UDINT;
	END_TYPE
  //Servers:
	Signal_Input 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
		AxisType 	: _AXISCLASS;
  //Functions:
				//! <Function Comment="Receives as input from the CNC/_LMCAxis, the Actual Position and the Internal Position." Name="control"/>
	FUNCTION VIRTUAL GLOBAL control
		VAR_INPUT
			ActPos 	: DINT;
			IntPos 	: DINT;
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ControlLongReal
		VAR_INPUT
			ActPos 	: LREAL;
			IntPos 	: LREAL;
			IntSpeed 	: LREAL;
		END_VAR;
				//! <Function Comment="Updates the CNC StateFlags and the CNC ControlFlags" Name="StatePtr"/>
	FUNCTION VIRTUAL GLOBAL StatePtr
		VAR_INPUT
			StatePtr 	: ^CncFlags;
			CncstatePtr 	: ^CntrFlgs;
		END_VAR
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
				//! <Function Comment="Adopts the addresses of the Servers: AxisStatus, AxisError and the Bitfield:AxisControl&#13;&#10;around this for reading and updating" Name="SetAxisFlgs"/>
	FUNCTION VIRTUAL GLOBAL SetAxisFlgs
		VAR_INPUT
			pAxisStatus 	: ^_LMCAXIS_STATUS;
			pAxisError 	: ^_LMCAXIS_ERROR;
			pAxisControl 	: ^_LMCAXIS_CONTROLBITS;
		END_VAR
		VAR_OUTPUT
			Result 	: _LMCCONTROLLERTYPE;
		END_VAR;
				//! <Function Comment="Function to test if we have a controller connected to the CNC/_LMCAxis" Name="WriteConstant"/>
	FUNCTION VIRTUAL GLOBAL WriteConstant
		VAR_INPUT
			Resolution 	: DINT;
			Timebase 	: DINT;
			Accel 	: DINT;
			ptrCNCIntStruct 	: ^CNCInternalStruct;
		END_VAR
		VAR_OUTPUT
			StartSpeed 	: DINT;
		END_VAR;
				//! <Function Comment="Function used for transmitting the Speed value from the CNC/_LMCAxis to the controller" Name="Speed"/>
	FUNCTION VIRTUAL GLOBAL Speed
		VAR_INPUT
			ActSpeed 	: DINT;
		END_VAR;
				//! <Function Comment="set Client values" Name="SetClients"/>
	FUNCTION VIRTUAL GLOBAL SetClients
		VAR_INPUT
			No 	: DINT;			//! <Variable Comment="The parameter number of the client that should be changed." Name="SetClients.No"/>
			Value 	: DINT;			//! <Variable Comment="The value to which the client should be changed." Name="SetClients.Value"/>
		END_VAR
		VAR_OUTPUT
			State 	: DINT;			//! <Variable Comment="0 =&gt; Error : The number entered was invalid or controller is active&#13;&#10;1 =&gt; Ok" Name="SetClients.State"/>
		END_VAR;
				//! <Function Comment="checks if the drive is enabled or not" Name="PowerIsOn"/>
	FUNCTION VIRTUAL GLOBAL PowerIsOn
		VAR_OUTPUT
			RetCode 	: BOOL;			//! <Variable Comment="true ... Drive is enabled" Name="PowerIsOn.RetCode"/>
		END_VAR;
				//! <Function Comment="checks if a Hardware Error is activ" Name="CheckHWError"/>
	FUNCTION VIRTUAL GLOBAL CheckHWError
		VAR_OUTPUT
			Retcode 	: BOOL;
		END_VAR;
				//! <Function Comment="Check wether the hardware is ready for communication." Name="CheckHwReady"/>
	FUNCTION VIRTUAL GLOBAL CheckHwReady
		VAR_OUTPUT
			IsReady 	: BOOL;
		END_VAR;
				//! <Function Comment="Read Controller specific parameters" Name="ReadParameter"/>
	FUNCTION VIRTUAL GLOBAL ReadParameter
		VAR_INPUT
			No 	: DINT;			//! <Variable Comment="Parameter number" Name="ReadParameter.No"/>
		END_VAR
		VAR_OUTPUT
			Value 	: DINT;
		END_VAR;
				//! <Function Comment="Read the actual encoder position from the drive&#13;&#10;for DrivePosControl and _LMCSigControl only." Name="ReadActPosition"/>
	FUNCTION VIRTUAL GLOBAL ReadActPosition
		VAR_OUTPUT
			BinPos 	: DINT;			//! <Variable Comment="actual position in external units" Name="ReadActPosition.BinPos"/>
		END_VAR;
				//! <Function Comment="This methode is called at the beginig of each realtime cycle by the _LMCAxis object. DrivePosControl and _LMCSigControl use this interface to get all information from the hardware class _DriveAxis" Name="ReadPDO"/>
	FUNCTION VIRTUAL GLOBAL ReadPDO;
				//! <Function Comment="function to quit a hardware error" Name="QuitHWError"/>
	FUNCTION VIRTUAL GLOBAL QuitHWError;
				//! <Function Comment="Check whether the hardware is ready for switch on." Name="IsReadyToSwitchOn"/>
	FUNCTION VIRTUAL GLOBAL IsReadyToSwitchOn
		VAR_OUTPUT
			IsReady 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Controller::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_CONTROLLER
1$UINT, 41$UINT, (SIZEOF(::Controller))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1198357413), "Controller", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Controller.Signal_Input.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(2233060755), "Signal_Input", 
//Clients:
END_FUNCTION


#define USER_CNT_Controller 15

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Controller] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Controller::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Controller, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #M_WR_DIRECT();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #control();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #ControlLongReal();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #StatePtr();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #SetAxisFlgs();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[4]		:= #WriteConstant();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[5]		:= #Speed();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[6]		:= #SetClients();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[7]		:= #PowerIsOn();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[8]		:= #CheckHWError();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[9]		:= #CheckHwReady();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[10]		:= #ReadParameter();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[11]		:= #ReadActPosition();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[12]		:= #ReadPDO();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[13]		:= #QuitHWError();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[14]		:= #IsReadyToSwitchOn();

#pragma warning (default : 74)
	Signal_Input.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Signal_Input.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
//{{LSL_ENCRYPTION 16#800
66EAF2DBF342212FF2412A957A14F9957C4EA8798B038E42C6B4263C64122453C06D2F7F8776AA003232730B9557812CE47061190DCCF0FBC145276C19F0A8C167E31965CD83E102554F9ADC3B4F7B4A2C62FE9BF17043C48224E9180F1B2CE6C9292857
0E28799ADAAD0A36A077EB3E3FF24088ED0EBEF8EF037F2335D1ED159317AC2F0C374FEB50EEABDC9F1177B0D7483CFE719F0C9F8B0449E28F157C6C8F20A7E23EB68DBDA2E5F32059146FC48A6DA648AE40EC43114C691508810728CDDD3C155CCCC62C
05386033EADBC75312C116A100433E38D8AFEF7DF3CE80431221D022384CEEE2CA92E705500A7A572D2CE745CC9D850E41DB7F479A6A35BACA5D9EC525140AA1DCF3E11DFFDE7B0409620D9723663D54D54D56AF6F7959C7CED1D1CE7775B32925B3BDBD
4929CEC20FBFC756126F83B635A3E98139CD7D6CA3C5E233FAE9854507CF89C1C67F503EAF73F63C2AEC9C7EACED7F4B753AE2F2562810AD336B47B9C3534257096B4299F9443E49DECFF655EA4785C82D0AD0496FA54C67A09C27121D72E4FFFD135E76
4CA8416D6F7AC0BF08812D2C06C66DCEBAEAA08CB178DF94E3230CC018565190718FD9EB4B5D09DF7FC4BBB430962FE1126371205E97C155BAEE1C55DF9C70B81BC6D353DB2D627D26BD5BC295840397ACCD1F620064899221D396405BCC1A6CFFF27654
18B92AEB395F6047EF8B03049D085B3229F7380764F2E5C49E6F58558FC433493C8DB270F960137909A29A8CBD866A5D84B047038622DC3B280A636C0403A98CF607588300BBE253A64F85AB411291422F2AA6D9CBA63596F356A9F559BCB3E9059F4C09
148182290FF4A5E0F61BE8D75941334A88E6000345FF36983F6EFB19F6B187994846826914165B85658F63A2899D546CF7F8DA6505CF2B63FD2B1EA81FBAB93E838CB896176B5196876266EFADE84951526B8D826F8223C3E6AE100D73AC2334D40AFDFB
0134DF349C6394FCAB9FDFBEE3738FB9D0AB8770A1B89B77CC4EB41044546108BE06A02B58E609FA9FD6F2C0928A126F818DC2873AA78C9BF2018CC2F6028593DF06847334A811DB284C9049B0076CD14BBE6133345FB8F025638EB6A654901A643A6F23
1BC0D3125D2C0F90BD6B5409542CD8670F94AF4A25304D082E597F7B308FB30AC3562D75C98D65578EB7BD009DAACB792C802BFB6C9E63FBD55712C02A6A18CAAB5A3B34CEE4A343FF38EAFD904F82574ADF4094B3829CF7A6EED18E2EDDC7EFC10FF163
6242E246C31206BA5A2B59DCBAFF06328FA28750F1A4EFBE94CEC7BAD9931397725685985C83DBF3789BAD7ED4683413336D45EDAFF8076D7A560C1952EE2AAD86C4A75545DEB23C760A14510B5E93C657B1BAA4CA71FF421868A31C59DAC67FA440D66F
8935B07F39B1961A73C637CA9F5DA5B4E6112609CA0D1F52FD321118158255A241A7388FE3E595CB197020633F7C3FBBACC576D3EBD7C2B9895DA0C0457B7B1881E904C3AB95D8B860A9B32A61228C927369994892367BFEE55950E3F0155E9AD8D4C1C3
C9358AF31906B5CA3A497C5B5FDFB2CBD334B0E2CE169AFDE967B657B59BA92E1CA69139C341E59CDD05883D6C3AE86F0F1C73E7C30A63C16D21E2344A47D95D4F04539942E8346876BAB02EB70B2CA659203DA0FB6EF7EDA66DE38F8D9B8ED92E265321
C055EB2EF7FE9B35CE4A74366916943D086CFBD24BF8853A69A4045D2D31D5C7D474B9DE8E1DF9BFA859E905914B2CE29F716C674190712D0266C124DDDFAC8DE3621B7B32DD024E1CADD4AEF9BF3331A572C50898BD2193197EDC50ACF95198028B46E4
080DF578811DEEBD5611E78144C11819A875B06435D369D95FF82A9D28AFC2638FF06535C7B8DCF8F438D4604F3069BF5BE38CD282B2F69C9F6450010B25EEE36D1385350BC1069F8DF049E19FDFC49F2EBF307C96720943CB5BA8BB84E601C08CCFE2BE
2F9E3B4FD0C6CC13603DD37173FB9AE6F190A159765245AAF2EDAE256402CADD425C3A5CBD7D92DB0EEB0F6EA89AD1E3F0603D6A17C2D087C50F57B2A6FE8172C95A58CF6B9D18EE364D6CBE8EECB24345D4901795899730AB9842A9EE09CBBE47980344
01DF5EF492E5D6AC12D83B7247DC5F652A52581F9B8A9971E36ACF3505B239B743C6DEB46602CA31488520A47918868906AECE7D52E4739C73A5676018BA605B8B2B6B2FC3990D84E67E68F191DCDEE38D4F3D3F059AAFEB616777E1488668FCFAF7A065
55B9A38895C8D7DAF83CF8B735509DF88F98455296F66B6EF01D02AFCB864391586680269E68F0D8D471BA4058920E31737CA8167CDDE1D7EA58BA0FC5035505125B300E12EF231040659E624C25AC6DE285333197DBC4F75AB320E9986F567829BC31BE
F91F7AF480C98E77DB161B0C5116C01295E29C17410C2E7D4D301A6B65CCD9790F99F4A28F830267E824D49C89F9FA8F271C334327F20E51C3251E13EB71906E49CB14212CF18542998AC854321F30DF9C49D00BD04F54917BD73E68C58815489DCEFD2B
03B8797C679CE2887B51D0AE4D554BE17E3396512A2D58FFFFB5E6E2ED1C8F6FF15326D1488AE15E6ABD1379ACA328BF67FDDEA3C84410E89C0F8025263E55F46ECEAB6F3278B72BF452C8C5B4E12644931A39E1120201F3B61D11B693B469922BC93FB7
6B02E724E7A3CF27D9A412C8474C3F580FD6D2031137D828E4F9288F1058F64CB5FA0E9D1463A2E1EC69C7314BF46A83BB4B35E278908F03CA5DF24D1F348DFC1C82CC6A0487FD93FBC8015CF286A1189BFAC8FFF9A4AE3507D9A20639F3EE169ABECF04
43BEF3A59E2DA4B1E115C9D0BBEECD4FF831985EFE2417F49A2864E8A6CDB3F336BB8F374EAF3B7AAD572E6CB67BA8F9281A34AE4B26233410219A61858CD0E4C334F05F6DE7B7DE1B4F620A24BE7F53F8FBDF19C7ACAB82048DC66ACB39A476D2C9DF55
7FD0840F7BD37C53BEAC0909B3593191941063DC79217B44E7C5F3E2A6906DE20CC54157F3704C049AF11B97A3012CC7313D5CF4F2C014BE789CE5292090028EEB68362F467850D0EF3ADF4D39D6F6C77F5505230E660C90759ED6209585B448BF099D90
0FEB2E2F7177A2E16925090FF00708535C9993C81FF498DC330673946CD946307346D0A5B06DE771234DBBE6542287D253ACB59A3E5FE7C0182E84D5B67B74E899D9FA45A71FB274471565AAD8AAEE3EACD2915CF5779DCF2ADE236D7CBBAB65764532F9
BEA4C2275F34AA84E884A2A1A664B37C740ED5667A236F59A92C01AE530435A0163AFEEB5D038D975A9D85F7FBB2805F6E02D29BDA2A08DB8D02C27DB23AE18F4EE09398A6ED3A6EEBAE59735065AE843820C10BC3DD58B08219FAD0D81E7ACAEC12CAAC
3E130980BD4A71C8EF62966AA5F37789FCF015910ACCDF72F51EDAD440B1E5E47DA1B4CFD4FC092A959C0802305975D6D7ED5BA3C6F7032B843BFA97DD1CAC0807F7ABA1B2E4F95286A9CC39DD8308B0D28DEE4B102B9364B54EEB113D087FE1EF1AB17A
D3DA22F17F63A888C49D000F8AFD24921F770FCBBF6508B767DE94931A89C2FEF73FB1608FB9E67D2E0E412FAEBE8F85F969C5DAA4DA7DBBE61AA49F3E21603E90643A92AE238254B49449E815C9F9923FE62248276C4A17CCCBE36A5CEE79F2F31089FF
84FC80034BB6C636E31D77D296BF21EF72DE61CD6655372444B276332BF25190E92AD026DEA0355469FA42E070763B661218E55754AD18B4A48D6E09FFEE0AC66ED41F485FDD02E3F2BE40BD8C2C8E664B93CA5D19D0EE7A7CAB90AF617C0859F0F8E8ED
8C79320D43CA0DF6FF41C69576B98FFB99BC4850C4AB56BEE720C8053C31FF57B831CBD51BCE622752CD9E2278FE90CE8F04B8ACF58B12DDEBFC027875E1C9D6AD15D951F71CC17C3F06871010F7A445E21671A187F36937ED79E422BD528ABA601518BC
66DE12372BA853C4588CD3DB8F1A0A0FDAC0CD0EF8CE8CC838A41BAF6C5237AB680368D4B18419A17B28A04E645CD57F484241ED1E8B8888B8ECFCD6BA24A54FEE08B88B99AADC56F8BA0CA4B14523BA9118331DD0817B11FCF18BF1F196BFB1F0E6624E
03DD65059E3A893C7E704EE2DC5144393FEC91DA4AA8044C199624D95C72747699955F79A58BEA7186EE67FDC5AECDA04A526891591BFC613EA16086B96EFD9BA5F5320838B99EE5FBED157551547C2C6B17657B3BDC27FF37B0B458898830AF13B32D75
B8E722EBB0F2C92AF4200CE1864BAB5F7F9348D92B58AC7D48CB4BB889914774123235D2C56E3C293FE427B38BAB46F570E73097030A44234C65CD2A76EA30CDD56BF48D59E3DFE87B71C263C050831610F85C9FF8D4C420287E7E2CC1B4B40C5756AA14
AFEC0A2D60652C009FFD6E28E693DCF7275DECBB7C8351B9E5053D41B07C6C46A90DFE28FF98A1AEC3C7F0895AA4CCF3EF5B77880F4C4E7C0C83A621653B897DED0629718064DA424948A0CB8A141CAA4B5F2D73975C3297C7DDA76206B7CE46521CFFFC
95B4DB0B737A992D3124DE9EC582906C77CB5BC6E0E0BED3484EA6469BA9DBC9E9B301A26DED03B438323D651857148F82409A728E9D8A4758822D6A19409F1D