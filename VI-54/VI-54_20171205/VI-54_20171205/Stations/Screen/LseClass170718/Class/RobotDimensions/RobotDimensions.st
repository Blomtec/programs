//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "RobotDimensions"
	Revision           = "0.0"
	GUID               = "{0903929F-C595-41EF-8606-2FC748C29EB4}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(510,120)">
	<Channels>
		<Server Name="_________" GUID="{58D8A8FF-C3E1-42E3-A9D6-28EB7BF5E803}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="__________" GUID="{A2ADA06D-2BD7-4BA7-9EB8-E0EEE52F3E70}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="___________" GUID="{D2444845-F464-42AE-8774-EBFDC7DD7D76}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Error_R_Pos" GUID="{9D23A56E-5B83-40E7-80EC-E84F398DB97C}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Error_X_Pos" GUID="{13B50CB3-B666-4810-88F8-CA2CC68A99E8}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Error_Y_Pos" GUID="{D4CE5B55-22B1-4F5C-841D-02B451508961}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Error_Z_Pos" GUID="{B8E56C76-2EDC-4B39-899B-453B530140A9}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Max_R" GUID="{636AAE3B-CDCC-4134-9E38-08FA647DF891}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Server Name="Max_X" GUID="{612E9D7F-507B-4FAB-9E0C-8F7ABD611894}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Server Name="Max_Y" GUID="{5CD5B7D4-15CB-4940-B17A-1316C9B6BD60}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Server Name="Max_Z" GUID="{71BFDE21-75C6-4096-940F-FF6BF157F997}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Server Name="Min_R" GUID="{5A14279F-A917-40C7-B3A1-0F9B6769FB8C}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Server Name="Min_X" GUID="{06BBA089-029C-402D-A780-CAF8D39AC829}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Server Name="Min_Y" GUID="{84267A99-E6C2-4161-8759-438F9A85CC33}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Server Name="Min_Z" GUID="{08246B38-6C41-4B72-8CAB-1904E173D97D}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Client Name="ReadPositions" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
RobotDimensions : CLASS
  //Servers:
	Max_X 	: SvrChCmd_DINT;
	Min_X 	: SvrCh_DINT;
	Error_X_Pos 	: SvrCh_DINT;
	__________ 	: SvrCh_DINT;
	Max_Y 	: SvrCh_DINT;
	Min_Y 	: SvrCh_DINT;
	Error_Y_Pos 	: SvrCh_DINT;
	___________ 	: SvrCh_DINT;
	Max_Z 	: SvrCh_DINT;
	Min_Z 	: SvrCh_DINT;
	Error_Z_Pos 	: SvrCh_DINT;
	_________ 	: SvrCh_DINT;
	Max_R 	: SvrCh_DINT;
	Min_R 	: SvrCh_DINT;
	Error_R_Pos 	: SvrCh_DINT;
  //Clients:
	ReadPositions 	: CltChCmd_ModelD4V2;
  //Variables:
		Xpositions 	: _LMCPROF_POS;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION GLOBAL ResetErrors;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd ModelD4V2


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB RobotDimensions::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_ROBOTDIMENSIONS
0$UINT, 0$UINT, (SIZEOF(::RobotDimensions))$UINT, 
15$UINT, 1$UINT, 0$UINT, 
TO_UDINT(3150465384), "RobotDimensions", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::RobotDimensions.Max_X.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000011000$UINT, TO_UDINT(2144711656), "Max_X", 
(::RobotDimensions.Min_X.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2731164869), "Min_X", 
(::RobotDimensions.Error_X_Pos.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3871363059), "Error_X_Pos", 
(::RobotDimensions.__________.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(705157791), "__________", 
(::RobotDimensions.Max_Y.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(148013950), "Max_Y", 
(::RobotDimensions.Min_Y.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(3587011667), "Min_Y", 
(::RobotDimensions.Error_Y_Pos.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3684722243), "Error_Y_Pos", 
(::RobotDimensions.___________.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1229728487), "___________", 
(::RobotDimensions.Max_Z.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2447102660), "Max_Z", 
(::RobotDimensions.Min_Z.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(1287923177), "Min_Z", 
(::RobotDimensions.Error_Z_Pos.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2617253011), "Error_Z_Pos", 
(::RobotDimensions._________.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1738242946), "_________", 
(::RobotDimensions.Max_R.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2667600630), "Max_R", 
(::RobotDimensions.Min_R.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(1109372379), "Min_R", 
(::RobotDimensions.Error_R_Pos.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2893043538), "Error_R_Pos", 
//Clients:
(::RobotDimensions.ReadPositions.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(983665296), "ReadPositions", TO_UDINT(1486452278), "ModelD4V2", 0$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_RobotDimensions 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_RobotDimensions] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION RobotDimensions::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_RobotDimensions, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #M_WR_DIRECT();
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
	Max_X.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Max_X.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Min_X.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Min_X.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Max_Y.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Max_Y.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Min_Y.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Min_Y.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Max_Z.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Max_Z.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Min_Z.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Min_Z.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Max_R.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Max_R.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Min_R.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Min_R.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION VIRTUAL GLOBAL RobotDimensions::Init

  // X dimensions
  if Min_X = 0 then
    Min_X := cX_SwMin;
  end_if;
  if Max_X = 0 then
    Max_X := cX_SwMax;
  end_if;
  
  // Y dimensions
  if Min_Y = 0 then
    Min_Y := cY_SwMin;
  end_if;
  if Max_Y = 0 then
    Max_Y := cY_SwMax;
  end_if;
  
  // Z dimensions
  if Min_Z = 0 then
    Min_Z := cZ_SwMin;
  end_if;
  if Max_Z = 0 then
    Max_Z := cZ_SwMax;
  end_if;
  
  // R dimensions
  if Min_R = 0 then
    Min_R := cR_SwMin;
  end_if;
  if Max_R = 0 then
    Max_R := cR_SwMax;
  end_if;

END_FUNCTION

FUNCTION VIRTUAL GLOBAL RobotDimensions::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  ReadPositions.GetRobotPosition(Mode:=_LMCRobotBase::_POSITION_MODE::_ACTPOS_APPUNITS, 
                                 IncludeTool:= False, 
                                 CoordSystem:= 0, 
                                 pPositions:= #Xpositions);
  
  // Check if X-position is in between the limits
  if Xpositions.Pos1 <= Max_X & Xpositions.Pos1 >= Min_X then
    Error_X_Pos := 0;
  else
  //  Error_X_Pos := 1;
  end_if; 
  
  // Check if Y-position is in between the limits
  if Xpositions.Pos2 <= Max_Y & Xpositions.Pos2 >= Min_Y then
    Error_Y_Pos := 0;
  else
  //  Error_Y_Pos := 1;
  end_if; 
  
  // Check if Z-position is in between the limits
  if Xpositions.Pos3 <= Max_Z & Xpositions.Pos3 >= Min_Z then
    Error_Z_Pos := 0;
  else
  //  Error_Z_Pos := 1;
  end_if; 
  
  // Check if R-position is in between the limits
  if Xpositions.Pos4 <= Max_R & Xpositions.Pos4 >= Min_R then
    Error_R_Pos := 0;
  else
  //  Error_R_Pos := 1;
  end_if; 

  
	state := READY;

END_FUNCTION

FUNCTION GLOBAL RobotDimensions::ResetErrors

  Error_X_Pos := 0;
  Error_Y_Pos := 0;
  Error_Z_Pos := 0;
  Error_R_Pos := 0;

END_FUNCTION
