//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Comm_RecvData"
	Revision           = "0.4"
	GUID               = "{98937E06-78EC-425C-888F-396F31902965}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(600,240)"
	Comment            = "Receiving data via communication class.">
	<Channels>
		<Server Name="ClassSvr" GUID="{185E1400-D75A-4AD9-9B90-5CE7CF031686}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="sMyID" GUID="{4E5513DC-DCD7-4C41-96FB-7E73D7340531}" Visualized="false" Initialize="true" WriteProtected="true" Retentive="false" Comment="Source communication id number."/>
		<Server Name="sRecvCnt" GUID="{C78F7CF0-3AEB-411C-A07E-49C4991BCE87}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false" Comment="Counter for received data blocks."/>
		<Client Name="cDataMng" Required="true" Internal="false" Comment="Connection to communication data manager."/>
	</Channels>
	<RevDoku>
		<Owner/>
		<Dokumentation Revision="0.4" Date="2014-12-02" Author="hötant" Company="DETS" Description="changed init methode ( _firstscan is too late )"/>
		<Dokumentation Revision="0.3" Date="2014-11-11" Author="hötant" Company="DETS" Description="added new methode CallBackReciverCMD"/>
		<Dokumentation Revision="0.2" Date="2014-10-22" Author="hötant" Company="DETS" Description="added new output parameter to  method CallBackReciver"/>
		<Dokumentation Revision="0.1" Date="2014-10-21" Author="SJO" Company="DETS" Description="SJO_09102014 added Background method"/>
	</RevDoku>
</Class>
*)
Comm_RecvData : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	sMyID 	: SvrCh_DINT;
	sRecvCnt 	: SvrCh_DINT;
  //Clients:
	cDataMng 	: CltChCmd_DataManager;
  //Variables:
		InitCounter 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CallBackReciver
		VAR_INPUT
			DestinationID 	: DINT;
			SourceID 	: DINT;
			size 	: UDINT;
			pdata 	: ^USINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: BOOL;			//! <Variable Comment="TRUE .. erfolgreich Empfangen .._MNG_Recived &#13;&#10;FALSE.. Fehler beim Empfangen .._MNG_GlobalReciveError" Name="CallBackReciver.retcode"/>
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL CallBackReciverCMD
		VAR_INPUT
			DestinationID 	: DINT;
			SourceID 	: DINT;
			size 	: UDINT;
			pdata 	: ^USINT;
			OptCMD 	: USINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: BOOL;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd DataManager


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Comm_RecvData::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_COMM_RECVDATA
0$UINT, 4$UINT, (SIZEOF(::Comm_RecvData))$UINT, 
3$UINT, 1$UINT, 0$UINT, 
TO_UDINT(322627646), "Comm_RecvData", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Comm_RecvData.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Comm_RecvData.sMyID.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3817383452), "sMyID", 
(::Comm_RecvData.sRecvCnt.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3561094677), "sRecvCnt", 
//Clients:
(::Comm_RecvData.cDataMng.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2789960892), "cDataMng", TO_UDINT(4008337867), "DataManager", 1$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_Comm_RecvData 2

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Comm_RecvData] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Comm_RecvData::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Comm_RecvData, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #CallBackReciver();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #CallBackReciverCMD();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	sRecvCnt.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF sRecvCnt.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION GLOBAL Comm_RecvData_CB
	VAR_INPUT
		pthis 	: ^void;
		DestinationID 	: DINT;
		SourceID 	: DINT;
		size 	: UDINT;
		pdata 	: ^USINT;
	END_VAR
  var_output
    retcode : bool;
  end_var

  retcode := pthis$^Comm_RecvData^.CallBackReciver(DestinationID, SourceID, size, pdata);
  pthis$^Comm_RecvData^.sRecvCnt +=1;
  
END_FUNCTION

#pragma warning(disable:73);
FUNCTION VIRTUAL GLOBAL Comm_RecvData::CallBackReciver
	VAR_INPUT
		DestinationID 	: DINT;
		SourceID 	: DINT;
		size 	: UDINT;
		pdata 	: ^USINT;
	END_VAR
	VAR_OUTPUT
		retcode 	: BOOL;
	END_VAR
  
  
  retcode := CallBackReciverCMD(DestinationID:=(DestinationID AND 16#00FFFFFF), 
                                SourceID:=SourceID, 
                                size:=size, 
                                pdata:=pdata, 
                                OptCMD:= to_usint((DestinationID$udint AND 16#FF000000) shr 24)  );
  
END_FUNCTION
#pragma warning(default:73);

#pragma warning(disable:73);
FUNCTION VIRTUAL GLOBAL Comm_RecvData::CallBackReciverCMD
	VAR_INPUT
		DestinationID 	: DINT;
		SourceID 	: DINT;
		size 	: UDINT;
		pdata 	: ^USINT;
    OptCMD  : USINT;
	END_VAR
	VAR_OUTPUT
		retcode 	: BOOL;
	END_VAR
  
  // Daten wurden erfolgreich empfangen.
  retcode := TRUE;
  
END_FUNCTION
#pragma warning(default:73);


FUNCTION VIRTUAL GLOBAL Comm_RecvData::Init

  if InitCounter = 8 then
    cDataMng.ConnectReciver(udID:=sMyID, pThis:=this, pCallback:=#Comm_RecvData_CB());
  end_if;
  InitCounter +=1;

END_FUNCTION
