//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "FileDefine"
	Revision           = "1.0"
	GUID               = "{7AC10551-0D7E-4300-BE57-B9C0E7DF5B71}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(690,180)"
	Comment            = "Use this class to add a file for the diagnostic export.">
	<Channels>
		<Server Name="ClassSvr" GUID="{3DDDD38D-4CB8-4DA4-A3BC-5EB679DF3C2B}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="sUserDPNE" GUID="{8BA5F9D6-08FF-4328-8EB2-F973F68AC3A9}" Class="StringInternal" Visualized="false" Initialize="true" WriteProtected="false" Retentive="false" Comment="Path + name of the file. (for example: &quot;C:\MyFile.dat&quot;)"/>
		<Client Name="cFFHandler" Required="true" Internal="false" Comment="This client has to be connected to an object of the class DiagnosticStationFileFolderHandler."/>
		<Client Name="UserDPNE" Required="true" Internal="true"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.0" Date="2016-04-25" Author="GreJoh" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
	<Network Name="FileDefine">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "UserDPNE"
				GUID       = "{06D1559B-FBE4-4CA0-B88D-475B00C93B4D}"
				Class      = "String"
				Position   = "(120,240)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.UserDPNE" Destination="UserDPNE.Data"/>
			<Connection Source="this.sUserDPNE" Destination="UserDPNE.Data" Vertices="(848,270),(676,330),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
FileDefine : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	sUserDPNE 	: SvrChCmd_UDINT;
  //Clients:
	UserDPNE 	: CltChCmd_String;
	cFFHandler 	: CltChCmd_DiagnosticStationFileFolderHandler;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using String
#pragma usingLtd DiagnosticStationFileFolderHandler


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB FileDefine::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_FILEDEFINE
1$UINT, 0$UINT, (SIZEOF(::FileDefine))$UINT, 
2$UINT, 2$UINT, 0$UINT, 
TO_UDINT(3351043784), "FileDefine", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::FileDefine.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::FileDefine.sUserDPNE.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(2951567023), "sUserDPNE", 
//Clients:
(::FileDefine.UserDPNE.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1729749211), "UserDPNE", TO_UDINT(1850111279), "String", 1$UINT, 10$UINT, 
(::FileDefine.cFFHandler.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3854782875), "cFFHandler", TO_UDINT(254991556), "DiagnosticStationFileFolderHandler", 1$UINT, 1$UINT, 
END_FUNCTION


#define USER_CNT_FileDefine 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_FileDefine] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION FileDefine::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_FileDefine, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, sUserDPNE.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	vmt.CmdTable.Write		:= #sUserDPNE::M_WR_DIRECT();
	sUserDPNE.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF sUserDPNE.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL FileDefine::Init
  VAR
    tmpLength : udint;
    tmpDPNE : array [0..199] of char;
  END_VAR


  if _FirstScan then
    tmpLength := UserDPNE.GetLength();
    UserDPNE.ReadDataOff(udOff:=0, pData:=#tmpDPNE[0], udMax:= sizeof(tmpDPNE));
    tmpDPNE[tmpLength] :=0;
    cFFHandler.AddFileFolder(pDPNE:=#tmpDPNE[0], IsFile:=TRUE);
  end_if;

END_FUNCTION
