//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "AlarmDisplayList2"
	Revision           = "0.0"
	GUID               = "{181EBBCB-A017-418D-BC87-7E96A3FD7C63}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(480,120)">
	<Channels>
		<Server Name="AlaTxtLong">
		</Server>
		<Server Name="AlaTxtShort">
		</Server>
	</Channels>
	<Network Name="AlarmDisplayList2">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{C4FFE71A-FADF-4CFE-9274-6F78F766C8BD}"
				Class      = "AlarmDisplayList"
				Position   = "(218,120)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Acknowledge"/>
					<Server Name="AlaTxtLong"/>
					<Server Name="AlaTxtShort"/>
					<Server Name="Delete"/>
					<Server Name="HelpTxt"/>
					<Server Name="NoActive"/>
					<Server Name="Refresh"/>
					<Server Name="Server0"/>
					<Client Name="ccAlarmChanged"/>
					<Client Name="coAlarmTitle"/>
					<Client Name="ColumnChoice"/>
					<Client Name="coSystemLogging"/>
					<Client Name="Lse"/>
					<Client Name="MaxNo"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Server0" Destination="_base.Server0" Vertices="(976,210),(804,210),"/>
			<Connection Source="this.Refresh" Destination="_base.Refresh" Vertices="(976,270),(804,270),"/>
			<Connection Source="this.Acknowledge" Destination="_base.Acknowledge" Vertices="(976,330),(804,330),"/>
			<Connection Source="this.Delete" Destination="_base.Delete" Vertices="(976,390),(804,390),"/>
			<Connection Source="this.NoActive" Destination="_base.NoActive" Vertices="(976,450),(804,450),"/>
			<Connection Source="this.HelpTxt" Destination="_base.HelpTxt" Vertices="(976,510),(804,510),"/>
			<Connection Source="this.AlaTxtShort" Destination="_base.AlaTxtShort" Vertices="(976,570),(804,570),"/>
			<Connection Source="this.AlaTxtLong" Destination="_base.AlaTxtLong" Vertices="(976,630),(804,630),"/>
			<Connection Source="_base.Lse" Destination="this.Lse" Vertices="(218,210),(38,210),"/>
			<Connection Source="_base.MaxNo" Destination="this.MaxNo" Vertices="(218,270),(38,270),"/>
			<Connection Source="_base.ColumnChoice" Destination="this.ColumnChoice" Vertices="(218,330),(38,330),"/>
			<Connection Source="_base.coSystemLogging" Destination="this.coSystemLogging" Vertices="(218,450),(38,450),"/>
			<Connection Source="_base.coAlarmTitle" Destination="this.coAlarmTitle" Vertices="(218,390),(38,390),"/>
			<Connection Source="_base.ccAlarmChanged" Destination="this.ccAlarmChanged" Vertices="(218,510),(38,510),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using AlarmDisplayList

AlarmDisplayList2 : CLASS
: AlarmDisplayList
  //Servers:
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION GLOBAL ResetData;
	
	FUNCTION GLOBAL WriteHelpTxt;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB AlarmDisplayList2::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_ALARMDISPLAYLIST2
0$UINT, 0$UINT, (SIZEOF(::AlarmDisplayList2))$UINT, 
0$UINT, 0$UINT, 0$UINT, 
TO_UDINT(3752654854), "AlarmDisplayList2", //Class
TO_UDINT(3279795640), "AlarmDisplayList", 1$UINT, 2$UINT, //Baseclass
//Servers:
//Clients:
END_FUNCTION


#define USER_CNT_AlarmDisplayList2 28

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_AlarmDisplayList2] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION AlarmDisplayList2::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= AlarmDisplayList::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= _MyIO::Server0.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, _MyIO::Server0.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_AlarmDisplayList2;
	_MyIO::Server0.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF _MyIO::Server0.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, AlaTxtShort.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	AlaTxtShort.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF AlaTxtShort.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, AlaTxtLong.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	AlaTxtLong.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF AlaTxtLong.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION GLOBAL AlarmDisplayList2::ResetData

  AlarmTxtLong.Clear();
  AlarmTxtShort.Clear();

END_FUNCTION

FUNCTION GLOBAL AlarmDisplayList2::WriteHelpTxt

  HelpTxt.Write(input:= 1);

END_FUNCTION
