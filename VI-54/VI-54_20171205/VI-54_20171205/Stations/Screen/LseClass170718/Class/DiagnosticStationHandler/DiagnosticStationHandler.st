//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "DiagnosticStationHandler"
	Revision           = "1.0"
	GUID               = "{4171BFEF-78ED-42A3-A0DE-CF4B7723368F}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	DefBackground      = "2 ms"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(510,180)"
	Comment            = "This class login at the DiagnosticBase class. It calls every station, which is logged in at this class.">
	<Channels>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.0" Date="2016-06-02" Author="HötAnt" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
	<Network Name="DiagnosticStationHandler">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{4D673167-D65C-4D95-BB87-17F4CDE0666E}"
				Class      = "DiagnosticStationHandlerBase"
				Position   = "(240,120)"
				Visualized = "false">
				<Channels>
					<Server Name="sFuctionname"/>
					<Server Name="sStatus"/>
					<Client Name="cDiagnostic"/>
					<Client Name="cFileSys"/>
					<Client Name="cSigCLib"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.sStatus" Destination="_base.sStatus" Vertices="(1358,210),(1186,210),"/>
			<Connection Source="_base.cDiagnostic" Destination="this.cDiagnostic" Vertices="(240,210),(38,210),"/>
			<Connection Source="this.sFuctionname" Destination="_base.sFuctionname" Vertices="(1358,270),(1186,270),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using DiagnosticStationHandlerBase

DiagnosticStationHandler : CLASS
: DiagnosticStationHandlerBase
  //Servers:
  //Clients:
  //Variables:
  //Functions:
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB DiagnosticStationHandler::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_DIAGNOSTICSTATIONHANDLER
1$UINT, 0$UINT, (SIZEOF(::DiagnosticStationHandler))$UINT, 
0$UINT, 0$UINT, 0$UINT, 
TO_UDINT(3758957087), "DiagnosticStationHandler", //Class
TO_UDINT(3493223079), "DiagnosticStationHandlerBase", 1$UINT, 0$UINT, //Baseclass
//Servers:
//Clients:
END_FUNCTION


#define USER_CNT_DiagnosticStationHandler 5

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_DiagnosticStationHandler] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION DiagnosticStationHandler::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= DiagnosticStationHandlerBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= DiagnosticStationHandlerBase::sStatus.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, DiagnosticStationHandlerBase::sStatus.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_DiagnosticStationHandler;
	DiagnosticStationHandlerBase::sStatus.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF DiagnosticStationHandlerBase::sStatus.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
