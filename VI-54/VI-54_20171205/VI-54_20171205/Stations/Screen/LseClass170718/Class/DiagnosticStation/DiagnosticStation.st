//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "DiagnosticStation"
	Revision           = "1.1"
	GUID               = "{BA3D5355-F2AB-4371-8F46-BE2B78505897}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(960,420)"
	Comment            = "Use this class for new stations for the diagnostic export.">
	<Channels>
		<Server Name="ClassSvr" GUID="{DB04D442-DA8A-43B3-AB3D-FDD228A980F2}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false" Comment="Is not used."/>
		<Server Name="ID_Destination" GUID="{0CF0FCF4-D11F-4AE9-9B38-E4D24EFACBD8}" Visualized="false" Initialize="true" WriteProtected="true" Retentive="false"/>
		<Server Name="ID_Source" GUID="{FBAF6CD9-DFF0-4299-858F-8FBBD419D083}" Visualized="false" Initialize="true" WriteProtected="true" Retentive="false"/>
		<Server Name="sStationName" GUID="{6EEC5AF0-4BE5-44AC-8C5F-8F391D04C4CE}" Class="StringInternal" Visualized="false" Initialize="true" WriteProtected="false" Retentive="false" Comment="Name of the station."/>
		<Server Name="sStatus" GUID="{DCB00574-2844-436A-9D11-EF9713231966}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false" Comment="Shows the actual state."/>
		<Client Name="cHandler" Required="true" Internal="false" Comment="Object channel to DiagnosticStationHandler."/>
		<Client Name="cPrio" Required="true" Internal="false" Comment="Communication priority number."/>
		<Client Name="cUserFunction" Required="true" Internal="false" Comment="Object channel to UserFunction."/>
		<Client Name="DiagnosticWork" Required="true" Internal="true"/>
		<Client Name="ReceiveDataCMD" Required="true" Internal="true"/>
		<Client Name="SendDataCMD" Required="true" Internal="true"/>
		<Client Name="toDataManager" Required="true" Internal="false" Comment="Connection to communication data manager."/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek"/>
		<Dokumentation Revision="1.1" Date="2016-06-15" Author="HasHan" Company="Sigmatek" Description="changed some clients to server"/>
		<Dokumentation Revision="1.0" Date="2016-06-02" Author="HötAnt" Company="Sigmatek" Description="Creation"/>
	</RevDoku>
	<Network Name="DiagnosticStation">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name           = "DiagnosticWork"
				GUID           = "{1C489665-23B0-47C3-9F1C-268A49EF14A2}"
				Class          = "DiagnosticWork"
				Position       = "(420,120)"
				Visualized     = "false"
				BackgroundTime = "2 ms">
				<Channels>
					<Server Name="sStationName" Value="&quot;PLC1&quot;"/>
					<Server Name="sStatus"/>
					<Client Name="cHandler"/>
					<Client Name="cToCom"/>
					<Client Name="cUserFunction"/>
				</Channels>
			</Object>
			<Object
				Name       = "ReceiveDataCMD"
				GUID       = "{452847E3-7F74-4B32-B1B6-17625C7D0408}"
				Class      = "ReceiveDataCMD"
				Position   = "(360,900)"
				Visualized = "false">
				<Channels>
					<Server Name="ClassSvr"/>
					<Server Name="ID_Source"/>
					<Server Name="sRecvCnt"/>
					<Client Name="cDiagnosticWork"/>
					<Client Name="toDataManager"/>
				</Channels>
			</Object>
			<Object
				Name       = "SendDataCMD"
				GUID       = "{E7D07C1C-2264-41C0-A3A5-AF174DDE1B3C}"
				Class      = "SendDataCMD"
				Position   = "(390,450)"
				Visualized = "false">
				<Channels>
					<Server Name="ClassSvr"/>
					<Server Name="ID_Destination"/>
					<Server Name="ID_Source"/>
					<Server Name="sSendCnt"/>
					<Server Name="sSendErr"/>
					<Client Name="cPrio"/>
					<Client Name="cStation"/>
					<Client Name="toDataManager"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.DiagnosticWork" Destination="DiagnosticWork.sStatus"/>
			<Connection Source="this.ID_Destination" Destination="SendDataCMD.ID_Destination" Vertices="(1066,450),(876,600),"/>
			<Connection Source="this.ID_Source" Destination="SendDataCMD.ID_Source" Vertices="(1066,390),(876,660),"/>
			<Connection Source="DiagnosticWork.cHandler" Destination="this.cHandler" Vertices="(420,210),(38,210),"/>
			<Connection Source="DiagnosticWork.cToCom" Destination="SendDataCMD.ClassSvr" Vertices="(420,270),(300,270),(300,390),(930,390),(930,540),(876,540),"/>
			<Connection Source="DiagnosticWork.cUserFunction" Destination="this.cUserFunction" Vertices="(420,330),(38,330),"/>
			<Connection Source="SendDataCMD.cStation" Destination="DiagnosticWork.sStatus" Vertices="(390,660),(870,210),"/>
			<Connection Source="SendDataCMD.cPrio" Destination="this.cPrio" Vertices="(390,600),(38,390),"/>
			<Connection Source="this.sStatus" Destination="DiagnosticWork.sStatus" Vertices="(1066,270),(870,210),"/>
			<Connection Source="this.sStationName" Destination="DiagnosticWork.sStationName" Vertices="(1066,330),(870,270),"/>
			<Connection Source="this.SendDataCMD" Destination="SendDataCMD.ClassSvr"/>
			<Connection Source="SendDataCMD.toDataManager" Destination="this.toDataManager" Vertices="(390,540),(38,270),"/>
			<Connection Source="this.ReceiveDataCMD" Destination="ReceiveDataCMD.ClassSvr"/>
			<Connection Source="ReceiveDataCMD.toDataManager" Destination="this.toDataManager" Vertices="(360,990),(38,270),"/>
			<Connection Source="ReceiveDataCMD.cDiagnosticWork" Destination="DiagnosticWork.sStatus" Vertices="(360,1050),(870,210),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
DiagnosticStation : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	sStatus 	: SvrCh_iprStates;
	sStationName 	: SvrChCmd_UDINT;
	ID_Source 	: SvrCh_DINT;
	ID_Destination 	: SvrCh_DINT;
  //Clients:
	DiagnosticWork 	: CltChCmd_DiagnosticWork;
	cHandler 	: CltChCmd_DiagnosticStationHandlerBase;
	toDataManager 	: CltChCmd_DataManager;
	cUserFunction 	: CltChCmd_DiagnosticUserFunction;
	cPrio 	: CltCh_DINT;
	ReceiveDataCMD 	: CltChCmd_ReceiveDataCMD;
	SendDataCMD 	: CltChCmd_SendDataCMD;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL sStatus::Read
		VAR_OUTPUT
			output (EAX) 	: iprStates;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ID_Source::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ID_Destination::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using DiagnosticWork
#pragma using ReceiveDataCMD
#pragma using SendDataCMD
#pragma usingLtd DataManager
#pragma usingLtd DiagnosticStationHandlerBase
#pragma usingLtd DiagnosticUserFunction


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB DiagnosticStation::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_DIAGNOSTICSTATION
1$UINT, 1$UINT, (SIZEOF(::DiagnosticStation))$UINT, 
5$UINT, 7$UINT, 0$UINT, 
TO_UDINT(4292622092), "DiagnosticStation", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::DiagnosticStation.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::DiagnosticStation.sStatus.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3043700589), "sStatus", 
(::DiagnosticStation.sStationName.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(4172946281), "sStationName", 
(::DiagnosticStation.ID_Source.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4072861165), "ID_Source", 
(::DiagnosticStation.ID_Destination.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3587003032), "ID_Destination", 
//Clients:
(::DiagnosticStation.DiagnosticWork.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(435391692), "DiagnosticWork", TO_UDINT(435391692), "DiagnosticWork", 1$UINT, 0$UINT, 
(::DiagnosticStation.cHandler.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000110$UINT, TO_UDINT(4086181582), "cHandler", TO_UDINT(3493223079), "DiagnosticStationHandlerBase", 1$UINT, 0$UINT, 
(::DiagnosticStation.toDataManager.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000110$UINT, TO_UDINT(31318979), "toDataManager", TO_UDINT(4008337867), "DataManager", 1$UINT, 0$UINT, 
(::DiagnosticStation.cUserFunction.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000110$UINT, TO_UDINT(121626066), "cUserFunction", TO_UDINT(487743715), "DiagnosticUserFunction", 1$UINT, 0$UINT, 
(::DiagnosticStation.cPrio.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000110$UINT, TO_UDINT(3130820789), "cPrio", 
(::DiagnosticStation.ReceiveDataCMD.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2311390549), "ReceiveDataCMD", TO_UDINT(2311390549), "ReceiveDataCMD", 1$UINT, 0$UINT, 
(::DiagnosticStation.SendDataCMD.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2500758279), "SendDataCMD", TO_UDINT(2500758279), "SendDataCMD", 1$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_DiagnosticStation 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_DiagnosticStation] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION DiagnosticStation::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_DiagnosticStation, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	sStatus.pMeth			:= StoreMethod( #sStatus::Read(), #M_NO_F() );
	IF sStatus.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, sStationName.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	vmt.CmdTable.Write		:= #sStationName::M_WR_DIRECT();
	sStationName.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF sStationName.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ID_Source.pMeth			:= StoreMethod( #ID_Source::Read(), #M_NO_F() );
	IF ID_Source.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ID_Destination.pMeth			:= StoreMethod( #ID_Destination::Read(), #M_NO_F() );
	IF ID_Destination.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION VIRTUAL GLOBAL DiagnosticStation::Init

  if _FirstScan then
    ReceiveDataCMD.ID_Source := ID_Source; //set the same ID to the receive-object
  end_if;

END_FUNCTION

FUNCTION VIRTUAL GLOBAL DiagnosticStation::sStatus::Read
	VAR_OUTPUT
		output (EAX) 	: iprStates;
	END_VAR

	sStatus := DiagnosticWork.sStatus.Read();
	output := sStatus;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL DiagnosticStation::ID_Destination::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	ID_Destination := SendDataCMD.ID_Destination.Read();
	output := ID_Destination;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL DiagnosticStation::ID_Source::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	ID_Source := SendDataCMD.ID_Source.Read();
	output := ID_Source;

END_FUNCTION
