//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "TerminalControl"
	Revision           = "3.2"
	GUID               = "{E2C7BDA1-AC7A-4B86-B70D-C42E551B1090}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "100 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(690,1560)">
	<Channels>
		<Server Name="ActScreenNbr" GUID="{F5962752-81D6-46DA-BF52-C9D22022E34D}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ActWindowNbr" GUID="{3ABF5BEB-44F5-4081-B76A-A72E5729F972}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Down" GUID="{C817F5AF-CCC4-4169-98BE-1DD0E5363737}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="F1" GUID="{8405802D-9ED0-4989-BD57-4CD1E6860AD0}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="F2" GUID="{2C3DC374-5D05-4DE1-8F2C-689EBC4615F1}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="F3" GUID="{27130C83-12F5-4E78-8ACC-71674006A767}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="F4" GUID="{F93D94FB-5DF0-40B3-BB78-B31CB8934F5E}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="F5" GUID="{8C1027F7-B337-4A44-9F92-7DBA0587EE29}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="F6" GUID="{57084BFF-41F5-4C9D-A642-CE5221D7B295}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="F7" GUID="{05EA78BB-5040-43D1-A690-3577D8BE9312}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="F8" GUID="{30580CC4-9EED-4053-881E-78EC08666C78}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="GoInReset" GUID="{F552F51C-35CD-473F-A884-9C02965018D3}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="KeyCode" GUID="{E31C73BB-655F-4668-A92C-3F65A3F9698F}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="keypresCnt" GUID="{D7704662-024E-4E30-9EEC-E6A3983D86CB}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Left" GUID="{4F3E64D6-7C3F-494B-A9C6-97D42DB41F2D}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="PgDown" GUID="{6B6427B7-E879-4663-9099-E5C72EE6E5E9}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="PgUp" GUID="{78701912-3E73-48C4-8894-5860FFA863B3}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Right" GUID="{A2EF94EA-8A6B-4A0D-8597-1ECC3AB37DFB}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="sDeactivateScreenSaver" GUID="{CB0E0534-9837-4B05-A938-7AEB43A8C6E9}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="sDelayBacklight" GUID="{BA86689F-1969-41A0-91E1-23BB59F4F0D9}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Server Name="sDelayScreenSaver" GUID="{38127986-5969-47D8-A9BE-0192E141DC2D}" Visualized="true" Initialize="true" DefValue="0" WriteProtected="false" Retentive="File"/>
		<Server Name="SelectScreen" GUID="{8929B968-9FA5-48CA-B9D1-8FBA3E05BAAB}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="SelectWindow" GUID="{4C8E329B-9B4A-4A90-89CA-AF48945ECF03}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server
			Name           = "Server0"
			Initialize     = "false"
			Visualized     = "true"
			WriteProtected = "true">
		</Server>
		<Server Name="Up" GUID="{76878398-5325-4226-B094-6B8253EE452B}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="WindowEnd" GUID="{F047634B-2869-484A-B50A-9535D3B70824}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="OSkernel" Required="false" Internal="false"/>
	</Channels>
	<Network Name="TerminalControl">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{0B0F4AFC-2EC0-4BDA-BCD2-08DA6800DDF1}"
				Class      = "_Global"
				Position   = "(270,150)"
				Visualized = "true">
				<Channels>
					<Server Name="Server0"/>
					<Client Name="Lse"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="_base.Lse" Destination="this.Lse" Vertices="(270,240),(38,210),"/>
			<Connection Source="this.Server0" Destination="_base.Server0" Vertices="(742,210),(570,240),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using _Global

TerminalControl : CLASS
: _Global
  //Servers:
	SelectScreen 	: SvrCh_DINT;
	SelectWindow 	: SvrCh_DINT;
	ActWindowNbr 	: SvrCh_DINT;
	ActScreenNbr 	: SvrCh_DINT;
	KeyCode 	: SvrCh_DINT;
	keypresCnt 	: SvrCh_DINT;
	F1 	: SvrCh_DINT;
	F2 	: SvrCh_DINT;
	F3 	: SvrCh_DINT;
	F4 	: SvrCh_DINT;
	F5 	: SvrCh_DINT;
	F6 	: SvrCh_DINT;
	F7 	: SvrCh_DINT;
	F8 	: SvrCh_DINT;
	Up 	: SvrCh_DINT;
	Down 	: SvrCh_DINT;
	Left 	: SvrCh_DINT;
	Right 	: SvrCh_DINT;
	PgUp 	: SvrCh_DINT;
	PgDown 	: SvrCh_DINT;
	GoInReset 	: SvrCh_DINT;
	sDelayScreenSaver 	: SvrCh_UDINT;
	sDelayBacklight 	: SvrCh_UDINT;
	sDeactivateScreenSaver 	: SvrCh_DINT;
	WindowEnd 	: SvrCh_DINT;
  //Clients:
	OSkernel 	: CltChCmd__OSKernel;
  //Variables:
		LedF1Old 	: DINT;
		LedEROld 	: DINT;
		LedRNOld 	: DINT;
		LedF2Old 	: DINT;
		LedF3Old 	: DINT;
		LedF4Old 	: DINT;
		LedF5Old 	: DINT;
		LedF6Old 	: DINT;
		LedF7Old 	: DINT;
		LedF8Old 	: DINT;
		TimeMark 	: UDINT;
		dState_ScreenSaver 	: DINT;
		udTimeStamp 	: UDINT;
		ActScreenNbrOld 	: DINT;
		ActWindowNbrOld 	: DINT;
		Refresh 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL IF_WindowRun
		VAR_INPUT
			whoami 	: ^_WHOAMI;
			pic 	: ^void;
			event 	: ^_EVENT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL IF_WindowEnd
		VAR_INPUT
			whoami 	: ^_WHOAMI;
			pic 	: ^void;
		END_VAR;
				//! <Function Comment="methode will be called after lse-project is successfully loaded and &#13;&#10;possibly given communication to extern plc is stable" Name="IF_ProjectReady"/>
	FUNCTION VIRTUAL GLOBAL IF_ProjectReady
		VAR_INPUT
			state 	: BOOL;
		END_VAR
		VAR_OUTPUT
			retcode 	: BOOL;
		END_VAR;
	
	FUNCTION GLOBAL SelectScreenNbr
		VAR_INPUT
			Nbr 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL SelectWindowNbr
		VAR_INPUT
			Nbr 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL ActScrnNbr
		VAR_OUTPUT
			ActNbr 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL ActWinNbr
		VAR_OUTPUT
			ActNbr 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL ResetScreen;
	
	FUNCTION VIRTUAL GLOBAL SelectScreen::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL SelectWindow::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL GoInReset::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL sDelayScreenSaver::Write
		VAR_INPUT
			input (EAX) 	: UDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL sDelayBacklight::Write
		VAR_INPUT
			input (EAX) 	: UDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd _OSKernel


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB TerminalControl::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_TERMINALCONTROL
3$UINT, 2$UINT, (SIZEOF(::TerminalControl))$UINT, 
25$UINT, 1$UINT, 0$UINT, 
TO_UDINT(74052286), "TerminalControl", //Class
TO_UDINT(3788417926), "_Global", 0$UINT, 14$UINT, //Baseclass
//Servers:
(::TerminalControl.SelectScreen.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1767003623), "SelectScreen", 
(::TerminalControl.SelectWindow.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1039846666), "SelectWindow", 
(::TerminalControl.ActWindowNbr.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1041076765), "ActWindowNbr", 
(::TerminalControl.ActScreenNbr.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4272093810), "ActScreenNbr", 
(::TerminalControl.KeyCode.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3509766824), "KeyCode", 
(::TerminalControl.keypresCnt.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(10799429), "keypresCnt", 
(::TerminalControl.F1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3055876678), "F1", 
(::TerminalControl.F2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(791522300), "F2", 
(::TerminalControl.F3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1479187306), "F3", 
(::TerminalControl.F4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3327004361), "F4", 
(::TerminalControl.F5.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2974367327), "F5", 
(::TerminalControl.F6.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(675311589), "F6", 
(::TerminalControl.F7.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1598513011), "F7", 
(::TerminalControl.F8.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3489153762), "F8", 
(::TerminalControl.Up.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3984517658), "Up", 
(::TerminalControl.Down.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(711622031), "Down", 
(::TerminalControl.Left.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1290930908), "Left", 
(::TerminalControl.Right.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1134475172), "Right", 
(::TerminalControl.PgUp.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(859550494), "PgUp", 
(::TerminalControl.PgDown.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1555140510), "PgDown", 
(::TerminalControl.GoInReset.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(695040887), "GoInReset", 
(::TerminalControl.sDelayScreenSaver.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(3489441712), "sDelayScreenSaver", 
(::TerminalControl.sDelayBacklight.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(2288866241), "sDelayBacklight", 
(::TerminalControl.sDeactivateScreenSaver.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2910311889), "sDeactivateScreenSaver", 
(::TerminalControl.WindowEnd.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2742482723), "WindowEnd", 
//Clients:
(::TerminalControl.OSkernel.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(2605318284), "OSkernel", TO_UDINT(3045737964), "_OSKernel", 0$UINT, 4$UINT, 
END_FUNCTION


#define USER_CNT_TerminalControl 44

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_TerminalControl] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION TerminalControl::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= _Global::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= _Global::Server0.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, _Global::Server0.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_TerminalControl;
	vmt.CmdTable.Init		:= #Init();
	vmt.CmdTable.CyWork		:= #CyWork();
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #IF_WindowRun();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #IF_WindowEnd();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[13]		:= #IF_ProjectReady();

#pragma warning (default : 74)
	_Global::Server0.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF _Global::Server0.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SelectScreen.pMeth			:= StoreMethod( #M_RD_DIRECT(), #SelectScreen::Write() );
	IF SelectScreen.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SelectWindow.pMeth			:= StoreMethod( #M_RD_DIRECT(), #SelectWindow::Write() );
	IF SelectWindow.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	GoInReset.pMeth			:= StoreMethod( #M_RD_DIRECT(), #GoInReset::Write() );
	IF GoInReset.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	sDelayScreenSaver.pMeth			:= StoreMethod( #M_RD_DIRECT(), #sDelayScreenSaver::Write() );
	IF sDelayScreenSaver.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	sDelayBacklight.pMeth			:= StoreMethod( #M_RD_DIRECT(), #sDelayBacklight::Write() );
	IF sDelayBacklight.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	sDeactivateScreenSaver.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF sDeactivateScreenSaver.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	WindowEnd.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF WindowEnd.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
#pragma using _Lse


//*********************Inserted from .\MyGlobal\MyGlobal_00_00.st*********************



 



 //VIRTUAL GLOBAL MyGlobal::SelectScreen::Write

 //VIRTUAL GLOBAL MyGlobal::CyWork

FUNCTION VIRTUAL GLOBAL TerminalControl::IF_WindowRun
	VAR_INPUT
		whoami 	: ^_WHOAMI;
		pic 	: ^void;
		event 	: ^_EVENT;
	END_VAR
 

// check screen number..
	case whoami^.ima of

	IMA_PICTURE:
		ActScreenNbr := to_dint whoami^.no;

	IMA_WINDOW:
		ActWindowNbr := to_dint whoami^.no;
	end_case;

//  key control
	if event^.ftype = _event_keypress then
		KeyCode := event^.scancode;
  case event^.scancode of
			_F1: F1 := 1;
			_F2: F2 := 1;
			_F3: F3 := 1;
			_F4: F4 := 1;
			_F5: F5 := 1;
			_F6: F6 := 1;
			_F7: F7 := 1;
			_F8: F8 := 1;
			_UP: Up := 1;
			_DOWN : Down := 1;
			_LEFT : Left := 1;
			_RIGHT: Right := 1;
			_PGUP : PgUp := 1;
			_PGDOWN : PgDown := 1;
		end_case;
	elsif event^.ftype = _event_keyrelease then
		case event^.scancode of
			_F1:    F1 := 0;
			_F2:    F2 := 0;
			_F3:    F3 := 1;
			_F4:    F4 := 0;
			_F5:    F5 := 0;
			_F6:    F6 := 0;
			_F7:    F7 := 0;
			_F8:    F8 := 0;
			_UP:    Up := 0;
			_DOWN : Down := 0;
			_LEFT : Left := 0;
			_RIGHT: Right := 0;
			_PGUP : PgUp := 0;
			_PGDOWN : PgDown := 0;
		end_case;
    
		keypresCnt += 1;
	end_if;

  if (ActScreenNbr = 8 & SelectScreen = -1) then
    if ops.tAbsolute - TimeMark >= 30 * _100MS then
//      SelectScreen := 10;  not used !!
    end_if;  
  else
    TimeMark := ops.tAbsolute;
  end_if;  
 
// deactiveren van screen saver !!
  if ActScreenNbrOld <> ActScreenNbr then
    sDeactivateScreenSaver := 1;
  elsif ActWindowNbrOld <> ActWindowNbr then
    sDeactivateScreenSaver := 1;
  end_if;
  ActWindowNbrOld := ActWindowNbr;
  ActScreenNbrOld := ActScreenNbr;
  
// screen saver / backlight on/off 
  if (whoami^.ima = IMA_SCREENSAVER) then
    case dState_ScreenSaver of

      0 : if sDelayBacklight > 0 then
            if ops.tAbsolute - udTimeStamp >= sDelayBacklight min then
              dState_ScreenSaver +=1;
            end_if;
          end_if;

    end_case;
    if sDeactivateScreenSaver <> 0 then
      // Deactivate the Screensaver and turns on the backlight
      sDeactivateScreenSaver :=0;
      reset_screensaver();
    end_if;
  else
    sDeactivateScreenSaver := 0;
  end_if;

END_FUNCTION //VIRTUAL GLOBAL MyGlobal::IF_WindowRun

FUNCTION VIRTUAL GLOBAL TerminalControl::IF_WindowEnd
	VAR_INPUT
		whoami 	: ^_WHOAMI;
		pic 	: ^void;
	END_VAR
  
	ActWindowNbr := 0;
  

END_FUNCTION

FUNCTION VIRTUAL GLOBAL TerminalControl::Init

// voer ook de oude init uit 
	_Global::Init();
  SelectScreen := -1;
  SelectWindow := -1;
  
END_FUNCTION //VIRTUAL GLOBAL MyGlobal::Init

FUNCTION VIRTUAL GLOBAL TerminalControl::SelectScreen::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	SelectScreen := input;
 	result := SelectScreen;

END_FUNCTION

FUNCTION VIRTUAL GLOBAL TerminalControl::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

//                CMD_NEWPICTURE,     // open new picture (1)
//                CMD_NEWWINDOW,      // open new window (1)

	if SelectScreen <> - 1 then
    SelectScreenNbr(Nbr:=SelectScreen);
    SelectScreen := -1;
	end_if;

	if SelectWindow <> - 1 then
    SelectWindowNbr(Nbr:=SelectWindow);
    SelectWindow := -1;
	end_if;

   state:= READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL TerminalControl::SelectWindow::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

  InsertCmd(x0:=CMD_CLOSE, x1:= 0, x2:= 0);
	SelectWindow := input;
 	result := SelectWindow;


END_FUNCTION


FUNCTION GLOBAL TerminalControl::SelectScreenNbr
	VAR_INPUT
		Nbr 	: DINT;
	END_VAR


//                CMD_NEWPICTURE,     // open new picture (1)
//                CMD_NEWWINDOW,      // open new window (1)
		InsertCMD(CMD_NEWPICTURE, Nbr, 0); 
			F1 := 0;  // bij scherm wissel Softkeys uitzetten
			F2 := 0;
			F3 := 1;
			F4 := 0;
			F5 := 0;
			F6 := 0;
			F7 := 0;
	    F8 := 0;
		  Up := 0;
      Down := 0;
	   	Left := 0;
			Right := 0;
			PgUp := 0;
			PgDown := 0;
 

END_FUNCTION


FUNCTION GLOBAL TerminalControl::SelectWindowNbr
	VAR_INPUT
		Nbr 	: DINT;
	END_VAR
//                CMD_NEWPICTURE,     // open new picture (1)
//                CMD_NEWWINDOW,      // open new window (1)

		InsertCMD(CMD_NEWWINDOW, Nbr, 0); 
			F1 := 0;  // bij scherm wissel Softkeys uitzetten
			F2 := 0;
			F3 := 1;
			F4 := 0;
			F5 := 0;
			F6 := 0;
			F7 := 0;
	    F8 := 0;
		  Up := 0;
      Down := 0;
	   	Left := 0;
			Right := 0;
			PgUp := 0;
			PgDown := 0;


END_FUNCTION


FUNCTION GLOBAL TerminalControl::ActScrnNbr
	VAR_OUTPUT
		ActNbr 	: DINT;
	END_VAR

  ActNbr := ActScreenNbr;

END_FUNCTION


FUNCTION GLOBAL TerminalControl::ActWinNbr
	VAR_OUTPUT
		ActNbr 	: DINT;
	END_VAR
  
  ActNbr := ActWindowNbr;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL TerminalControl::GoInReset::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	GoInReset := input;
  OSkernel.Reset();
 	result := GoInReset;

END_FUNCTION


FUNCTION GLOBAL TerminalControl::ResetScreen

    InsertCMD(CMD_NEWPICTURE, ActScreenNbr, 0); 

END_FUNCTION


FUNCTION VIRTUAL GLOBAL TerminalControl::sDelayScreenSaver::Write
	VAR_INPUT
		input (EAX) 	: UDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: UDINT;
	END_VAR

  // write the delay to the LSE kernel
	sDelayScreenSaver := input;  // in [min]
  Lse.DelayScreenSaver.Write(input := sDelayScreenSaver MIN);
 	result := sDelayScreenSaver;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL TerminalControl::IF_ProjectReady
	VAR_INPUT
		state 	: BOOL;
	END_VAR
	VAR_OUTPUT
		retcode 	: BOOL;
	END_VAR

  // write delay to LSE kernel if the project is ready
  Lse.DelayScreenSaver.Write(input := sDelayScreenSaver min);
  retcode := state;


END_FUNCTION


FUNCTION VIRTUAL GLOBAL TerminalControl::sDelayBacklight::Write
	VAR_INPUT
		input (EAX) 	: UDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: UDINT;
	END_VAR

	sDelayBacklight := input;
	result := sDelayBacklight;

END_FUNCTION
